{"version":3,"sources":["../../../src/commons/yawp.js"],"names":["baseUrl","defaultFetchOptions","before","undefined","then","_catch","normalize","arg","Object","extractId","hasId","object","id","request","yawpFn","baseArg","options","q","Yawp","props","cb","promise","createOrUpdate","url","constructor","update","create","destroy","action","get","put","_patch","post","_delete","_options","clear","type","prepareRequestOptions","method","json","p","resolve","opt","req","catch","objects","map","wrapInstance","baseRequest","result","Array","wrapArray","parentBaseArg","parentBase","t","param","data","arguments","length","where","slice","call","order","sort","limit","wrappedRequest","setupQuery","list","body","params","query","key","value","verb","path","constructorFn","base","_super","sub","bindBaseMethods","apply","super","self","keys","prototype","i","l","bind","customFetchOptions","fn","customFetchOptionsFn","config","c","patch","baseApi"],"mappings":"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","file":"yawp.js","sourcesContent":["import {extend} from './utils';\n\nlet baseUrl = '/api';\nlet defaultFetchOptions = {};\nlet before = undefined;\nlet then = undefined;\nlet _catch = undefined;\n\nfunction normalize(arg) {\n    if (!arg) {\n        return '';\n    }\n    if (arg instanceof Object) {\n        return extractId(arg);\n    }\n    return arg;\n}\n\nfunction hasId(object) {\n    return object.id;\n}\n\nfunction extractId(object) {\n    if (hasId(object)) {\n        return object.id;\n    }\n    throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n}\n\nexport default (request) => {\n\n    function yawpFn(baseArg) {\n\n        let options = {};\n        let q = {};\n\n        class Yawp {\n\n            constructor(props) {\n                if (props) {\n                    extend(this, props);\n                }\n            }\n\n            // request\n\n            static clear() {\n                options = {\n                    url: normalize(baseArg)\n                };\n                q = {};\n            }\n\n            static prepareRequestOptions() {\n                let _options = extend({}, options);\n                this.clear();\n                return _options;\n            }\n\n            static baseRequest(type) {\n                const options = this.prepareRequestOptions();\n\n                const url = baseUrl + options.url;\n                delete options.url;\n\n                options.method = type;\n                options.json = true;\n                extend(options, defaultFetchOptions);\n\n                const p = Promise.resolve(before ? before(options) : options);\n\n                return p.then(opt => opt || options).then(options => {\n                    let req = request(url, options);\n\n                    if (then) {\n                        req = req.then(then);\n                    }\n\n                    if (_catch) {\n                        req = req.catch(_catch);\n                    }\n\n                    return req;\n                });\n            }\n\n            static wrapInstance(object) {\n                return new this(object);\n            }\n\n            static wrapArray(objects) {\n                return objects.map((object) => this.wrapInstance(object));\n            }\n\n            static wrappedRequest(type) {\n                return this.baseRequest(type).then((result) => {\n                    if (Array === result.constructor) {\n                        return this.wrapArray(result);\n                    }\n                    return this.wrapInstance(result)\n                });\n            }\n\n            // query\n\n            static from(parentBaseArg) {\n                let parentBase = normalize(parentBaseArg);\n                options.url = parentBase + options.url;\n                return this;\n            }\n\n            static transform(t) {\n                this.param('t', t);\n                return this;\n            }\n\n            static where(data) {\n                if (arguments.length === 1) {\n                    q.where = data;\n                } else {\n                    q.where = [].slice.call(arguments);\n                }\n                return this;\n            }\n\n            static order(data) {\n                q.order = data;\n                return this;\n            }\n\n            static sort(data) {\n                q.sort = data;\n                return this;\n            }\n\n            static limit(data) {\n                q.limit = data;\n                return this;\n            }\n\n            static fetch(arg) {\n                let cb = typeof arg === 'function' ? arg : undefined;\n\n                if (arg && !cb) {\n                    options.url += '/' + arg;\n                }\n\n                let promise = this.wrappedRequest('GET');\n\n                if (cb) {\n                    return promise.then(cb);\n                }\n\n                return promise;\n            }\n\n            static setupQuery() {\n                if (Object.keys(q).length > 0) {\n                    this.param('q', JSON.stringify(q));\n                }\n            }\n\n            static list(cb) {\n                this.setupQuery();\n\n                let promise = this.wrappedRequest('GET');\n\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n\n            static first(cb) {\n                this.limit(1);\n\n                return this.list((objects) => {\n                    let object = objects.length === 0 ? null : objects[0];\n                    return cb ? cb(object) : object;\n                });\n            }\n\n            static only(cb) {\n                return this.list((objects) => {\n                    if (objects.length !== 1) {\n                        throw 'called only but got ' + objects.length + ' results';\n                    }\n                    let object = objects[0];\n                    return cb ? cb(object) : object;\n                });\n            }\n\n            // repository\n\n            static create(object) {\n                options.body = JSON.stringify(object);\n                return this.wrappedRequest('POST');\n            }\n\n            static update(object) {\n                options.url = object.id;\n                options.body = JSON.stringify(object);\n                return this.wrappedRequest('PUT');\n            }\n\n            static patch(object) {\n                options.url = object.id || options.url;\n                options.body = JSON.stringify(object);\n                return this.wrappedRequest('PATCH');\n            }\n\n            static destroy(object) {\n                if (object) {\n                    options.url = extractId(object);\n                }\n                return this.baseRequest('DELETE');\n            }\n\n            // actions\n\n            static json(object) {\n                options.body = JSON.stringify(object);\n                return this;\n            }\n\n            static params(params) {\n                options.query = extend(options.query, params);\n                return this;\n            }\n\n            static param(key, value) {\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[key] = value;\n            }\n\n            static action(verb, path) {\n                options.url += '/' + path;\n                return this.baseRequest(verb);\n            }\n\n            static get(action) {\n                return this.action('GET', action);\n            }\n\n            static put(action) {\n                return this.action('PUT', action);\n            }\n\n            static _patch(action) {\n                return this.action('PATCH', action);\n            }\n\n            static post(action) {\n                return this.action('POST', action);\n            }\n\n            static _delete(action) {\n                return this.action('DELETE', action);\n            }\n\n            // es5 subclassing\n\n            static subclass(constructorFn) {\n                let base = yawpFn(baseArg);\n                let _super = this;\n                let sub = class extends base {\n                    constructor() {\n                        super();\n                        _super.bindBaseMethods(this, base);\n                        if (constructorFn) {\n                            constructorFn.apply(this, arguments);\n                        } else {\n                            super.constructor.apply(this, arguments);\n                        }\n                    }\n                };\n                sub.super = base;\n                return sub;\n            }\n\n            static bindBaseMethods(self, base) {\n                self.super = () => {\n                };\n                var keys = Object.getOwnPropertyNames(base.prototype);\n                for (let i = 0, l = keys.length; i < l; i++) {\n                    let key = keys[i];\n                    self.super[key] = base.prototype[key].bind(self);\n                }\n            }\n\n            // instance method\n\n            save(cb) {\n                let promise = this.createOrUpdate();\n                return cb ? promise.then(cb) : promise;\n            }\n\n            createOrUpdate() {\n                let promise;\n                if (hasId(this)) {\n                    options.url = this.id;\n                    promise = this.constructor.update(this);\n                } else {\n                    promise = this.constructor.create(this).then((object) => {\n                        this.id = object.id;\n                        return object;\n                    });\n                }\n                return promise;\n            }\n\n            destroy(cb) {\n                let promise = this.constructor.destroy(this);\n                return cb ? promise.then(cb) : promise;\n            }\n\n            get(action) {\n                options.url = extractId(this);\n                return this.constructor.get(action);\n            }\n\n            put(action) {\n                options.url = extractId(this);\n                return this.constructor.put(action);\n            }\n\n            _patch(action) {\n                options.url = extractId(this);\n                return this.constructor._patch(action);\n            }\n\n            post(action) {\n                options.url = extractId(this);\n                return this.constructor.post(action);\n            }\n\n            _delete(action) {\n                options.url = extractId(this);\n                return this.constructor._delete(action);\n            }\n        }\n\n        Yawp.clear();\n        return Yawp;\n    }\n\n    // base api\n\n    function customFetchOptions(fn) {\n        customFetchOptionsFn = fn;\n    }\n\n    function config(cb) {\n        let c = {\n            baseUrl: (url) => {\n                baseUrl = url;\n            },\n            defaultFetchOptions: (options) => {\n                defaultFetchOptions = options;\n            },\n            before: (fn) => {\n                before = fn;\n            },\n            then: (fn) => {\n                then = fn;\n            },\n            catch: (fn) => {\n                _catch = fn;\n            }\n        };\n        cb(c);\n    }\n\n    function update(object) {\n        let id = extractId(object);\n        return yawpFn(id).update(object);\n    }\n\n    function patch(object) {\n        let id = extractId(object);\n        return yawpFn(id).patch(object);\n    }\n\n    function destroy(object) {\n        let id = extractId(object);\n        return yawpFn(id).destroy(object);\n    }\n\n    const baseApi = {\n        config,\n        customFetchOptions,\n        update,\n        patch,\n        destroy\n    };\n\n    return extend(yawpFn, baseApi);\n}"]}