{"version":3,"sources":["../../../src/commons/fixtures.js"],"names":["DEFAULT_BASE_URL","DEFAULT_RESET_URL","DEFAULT_LAZY_PROPERTIES","DEFAULT_FETCH_OPTIONS","request","Fixtures","_baseUrl","_resetUrl","_lazyProperties","_defaultFetchOptions","promise","fixtures","lazy","callback","url","properties","options","all","method","then","clear","i","l","length","name","path","bindFixture","bindLazy","push","Fixture","api","Lazy","promiseFn","Promise","fx","createApi","key","data","chain","load","self","createStubs","createLoadPromiseFn","getLazyDataFor","isLoaded","prepare","object","json","body","JSON","stringify","response","getData","resolve","lazyProperties","inspectLazyProperties","resolveLazyProperties","hasOwnProperty","value","Function","actualValue","Object","hasStubs","reduce","map","property","__stub__","createLazyStubs","getFixtureRef"],"mappings":"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","file":"fixtures.js","sourcesContent":["import {extend} from './utils';\n\nconst DEFAULT_BASE_URL = '/fixtures';\nconst DEFAULT_RESET_URL = '/_ah/yawp/datastore/delete-all';\nconst DEFAULT_LAZY_PROPERTIES = ['id']; // needed till harmony proxies\nconst DEFAULT_FETCH_OPTIONS = {};\n\nexport default (request) => {\n\n    class Fixtures {\n        constructor() {\n            this._baseUrl = DEFAULT_BASE_URL;\n            this._resetUrl = DEFAULT_RESET_URL;\n            this._lazyProperties = DEFAULT_LAZY_PROPERTIES;\n            this._defaultFetchOptions = DEFAULT_FETCH_OPTIONS;\n            this.promise = null;\n            this.fixtures = [];\n            this.lazy = {};\n        }\n\n        config(callback) {\n            callback(this);\n        }\n\n        baseUrl(url) {\n            this._baseUrl = url;\n        }\n\n        resetUrl(url) {\n            this._resetUrl = url;\n        }\n\n        lazyProperties(properties) {\n            this._lazyProperties = properties;\n        }\n\n        defaultFetchOptions(options) {\n            extend(this._defaultFetchOptions, options);\n        }\n\n        reset(all) {\n            return request(this._resetUrl, {\n                method: 'GET'\n            }).then(() => {\n                this.clear(all);\n            });\n        }\n\n        clear(all) {\n            this.promise = null;\n            for (let i = 0, l = this.fixtures.length; i < l; i++) {\n                var name = this.fixtures[i].name;\n                var path = this.fixtures[i].path;\n                this.bindFixture(name, path);\n                all && this.bindLazy(name, path);\n            }\n        }\n\n        bind(name, path) {\n            this.fixtures.push({name, path});\n            this.bindFixture(name, path);\n            this.bindLazy(name);\n        }\n\n        bindFixture(name, path) {\n            this[name] = new Fixture(this, name, path).api;\n        }\n\n        bindLazy(name) {\n            this.lazy[name] = new Lazy(this, name).api;\n        }\n\n        chain(promiseFn) {\n            if (!this.promise) {\n                this.promise = promiseFn();\n            } else {\n                this.promise = this.promise.then(promiseFn);\n            }\n            return this.promise;\n        }\n\n        load(callback) {\n            if (!this.promise) {\n                return new Promise(() => callback && callback());\n            }\n            return this.promise.then(() => callback && callback());\n        }\n    }\n\n    class Fixture {\n        constructor(fx, name, path) {\n            this.fx = fx;\n            this.name = name;\n            this.path = path;\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            var api = (key, data) => {\n                return this.fx.chain(this.load(key, data));\n            };\n            api.self = this;\n            return api;\n        }\n\n        url() {\n            return this.fx._baseUrl + this.path;\n        }\n\n        load(key, data) {\n            this.createStubs(key);\n            return this.createLoadPromiseFn(key, data);\n        }\n\n        createLoadPromiseFn(key, data) {\n            if (!data) {\n                data = this.getLazyDataFor(key);\n            }\n\n            return () => {\n                if (this.isLoaded(key)) {\n                    return this.api[key];\n                }\n\n                return this.prepare(data).then((object) => {\n                    const options = {\n                        method: 'POST',\n                        json: true,\n                        body: JSON.stringify(object)\n                    };\n\n                    extend(options, this.fx._defaultFetchOptions);\n\n                    return request(this.url(), options).then((response) => {\n                        this.api[key] = response;\n                        return response;\n\n                    });\n                });\n            };\n        }\n\n        getLazyDataFor(key) {\n            var lazy = this.fx.lazy[this.name].self;\n            return lazy.getData(key);\n        }\n\n        prepare(data) {\n            return new Promise((resolve) => {\n                let object = {};\n                extend(object, data);\n\n                let lazyProperties = [];\n                this.inspectLazyProperties(object, lazyProperties);\n                this.resolveLazyProperties(object, lazyProperties, resolve);\n            });\n        }\n\n        resolveLazyProperties(object, lazyProperties, resolve) {\n            if (!lazyProperties.length) {\n                resolve(object);\n            } else {\n                var promise = lazyProperties[0]();\n                for (var i = 1, l = lazyProperties.length; i < l; i++) {\n                    promise = promise.then(lazyProperties[i]);\n                }\n\n                promise.then(() => {\n                    resolve(object);\n                });\n            }\n        }\n\n        inspectLazyProperties(object, lazyProperties) {\n            for (let key in object) {\n                if (!object.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                let value = object[key];\n                if (value instanceof Function) {\n                    lazyProperties.push(() => {\n                        return value().then((actualValue) => {\n                            object[key] = actualValue;\n                        });\n                    });\n                    continue;\n                }\n                if (value instanceof Object) {\n                    this.inspectLazyProperties(value, lazyProperties);\n                    return;\n                }\n            }\n        }\n\n        createStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            let self = this;\n            this.api[key] = this.fx._lazyProperties.reduce((map, property) => {\n                map[property] = () => {\n                    return new Promise((resolve) => resolve(self.api[key][property]));\n                };\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        isLoaded(key) {\n            return this.api[key] && !this.hasStubs(key);\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n    }\n\n    class Lazy {\n        constructor(fx, name) {\n            this.fx = fx;\n            this.name = name;\n            this.data = {};\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            let api = (key, data) => {\n                this.createLazyStubs(key);\n                this.data[key] = data;\n            };\n            api.self = this;\n            return api;\n        }\n\n        getData(key) {\n            return this.data[key];\n        }\n\n        createLazyStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            this.api[key] = this.fx._lazyProperties.reduce((map, property) => {\n                map[property] = () => {\n                    return this.getFixtureRef().load(key)().then((object) => object[property]);\n                };\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n\n        getFixtureRef() {\n            return this.fx[this.name].self;\n        }\n    }\n\n    return new Fixtures();\n};\n"]}