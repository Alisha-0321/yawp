{"version":3,"sources":["../../../src/commons/fixtures.js"],"names":["DEFAULT_BASE_URL","DEFAULT_RESET_URL","DEFAULT_LAZY_PROPERTIES","DEFAULT_FETCH_OPTIONS","request","Fixtures","_baseUrl","_resetUrl","_lazyProperties","_defaultFetchOptions","_defaultNamespace","promise","fixtures","lazy","callback","ns","url","properties","options","all","method","then","clear","i","l","length","name","path","bindFixture","bindLazy","push","Fixture","api","Lazy","promiseFn","fx","createApi","key","data","chain","load","self","createStubs","createLoadPromiseFn","getLazyDataFor","isLoaded","prepare","object","__namespace","namespace","undefined","headers","json","body","response","getData","resolve","lazyProperties","inspectLazyProperties","resolveLazyProperties","hasOwnProperty","value","Function","actualValue","Object","hasStubs","reduce","map","property","__stub__","createLazyStubs","getFixtureRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA,IAAMA,mBAAmB,WAAzB;AACA,IAAMC,oBAAoB,gCAA1B;AACA,IAAMC,0BAA0B,CAAC,IAAD,CAAhC,C,CAAwC;AACxC,IAAMC,wBAAwB,EAA9B;;kBAEe,UAACC,OAAD,EAAa;AAAA,QAElBC,QAFkB;AAGpB,4BAAc;AAAA;;AACV,iBAAKC,QAAL,GAAgBN,gBAAhB;AACA,iBAAKO,SAAL,GAAiBN,iBAAjB;AACA,iBAAKO,eAAL,GAAuBN,uBAAvB;AACA,iBAAKO,oBAAL,GAA4BN,qBAA5B;AACA,iBAAKO,iBAAL,GAAyB,IAAzB;AACA,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACA,iBAAKC,IAAL,GAAY,EAAZ;AACH;;AAZmB;AAAA;AAAA,mCAcbC,QAda,EAcH;AACbA,yBAAS,IAAT;AACH;AAhBmB;AAAA;AAAA,6CAkBHC,EAlBG,EAkBC;AACjB,qBAAKL,iBAAL,GAAyBK,EAAzB;AACH;AApBmB;AAAA;AAAA,oCAsBZC,GAtBY,EAsBP;AACT,qBAAKV,QAAL,GAAgBU,GAAhB;AACH;AAxBmB;AAAA;AAAA,qCA0BXA,GA1BW,EA0BN;AACV,qBAAKT,SAAL,GAAiBS,GAAjB;AACH;AA5BmB;AAAA;AAAA,2CA8BLC,UA9BK,EA8BO;AACvB,qBAAKT,eAAL,GAAuBS,UAAvB;AACH;AAhCmB;AAAA;AAAA,gDAkCAC,OAlCA,EAkCS;AACzB,mCAAO,KAAKT,oBAAZ,EAAkCS,OAAlC;AACH;AApCmB;AAAA;AAAA,kCAsCdC,GAtCc,EAsCT;AAAA;;AACP,uBAAOf,QAAQ,KAAKG,SAAb,EAAwB;AAC3Ba,4BAAQ;AADmB,iBAAxB,EAEJC,IAFI,CAEC,YAAM;AACV,0BAAKC,KAAL,CAAWH,GAAX;AACH,iBAJM,CAAP;AAKH;AA5CmB;AAAA;AAAA,kCA8CdA,GA9Cc,EA8CT;AACP,qBAAKR,OAAL,GAAe,IAAf;AACA,qBAAK,IAAIY,IAAI,CAAR,EAAWC,IAAI,KAAKZ,QAAL,CAAca,MAAlC,EAA0CF,IAAIC,CAA9C,EAAiDD,GAAjD,EAAsD;AAClD,wBAAIG,OAAO,KAAKd,QAAL,CAAcW,CAAd,EAAiBG,IAA5B;AACA,wBAAIC,OAAO,KAAKf,QAAL,CAAcW,CAAd,EAAiBI,IAA5B;AACA,yBAAKC,WAAL,CAAiBF,IAAjB,EAAuBC,IAAvB;AACAR,2BAAO,KAAKU,QAAL,CAAcH,IAAd,EAAoBC,IAApB,CAAP;AACH;AACJ;AAtDmB;AAAA;AAAA,iCAwDfD,IAxDe,EAwDTC,IAxDS,EAwDH;AACb,qBAAKf,QAAL,CAAckB,IAAd,CAAmB,EAACJ,UAAD,EAAOC,UAAP,EAAnB;AACA,qBAAKC,WAAL,CAAiBF,IAAjB,EAAuBC,IAAvB;AACA,qBAAKE,QAAL,CAAcH,IAAd;AACH;AA5DmB;AAAA;AAAA,wCA8DRA,IA9DQ,EA8DFC,IA9DE,EA8DI;AACpB,qBAAKD,IAAL,IAAa,IAAIK,OAAJ,CAAY,IAAZ,EAAkBL,IAAlB,EAAwBC,IAAxB,EAA8BK,GAA3C;AACH;AAhEmB;AAAA;AAAA,qCAkEXN,IAlEW,EAkEL;AACX,qBAAKb,IAAL,CAAUa,IAAV,IAAkB,IAAIO,IAAJ,CAAS,IAAT,EAAeP,IAAf,EAAqBM,GAAvC;AACH;AApEmB;AAAA;AAAA,kCAsEdE,SAtEc,EAsEH;AACb,oBAAI,CAAC,KAAKvB,OAAV,EAAmB;AACf,yBAAKA,OAAL,GAAeuB,WAAf;AACH,iBAFD,MAEO;AACH,yBAAKvB,OAAL,GAAe,KAAKA,OAAL,CAAaU,IAAb,CAAkBa,SAAlB,CAAf;AACH;AACD,uBAAO,KAAKvB,OAAZ;AACH;AA7EmB;AAAA;AAAA,iCA+EfG,QA/Ee,EA+EL;AACX,oBAAI,CAAC,KAAKH,OAAV,EAAmB;AACf,2BAAO,sBAAY;AAAA,+BAAMG,YAAYA,UAAlB;AAAA,qBAAZ,CAAP;AACH;AACD,uBAAO,KAAKH,OAAL,CAAaU,IAAb,CAAkB;AAAA,2BAAMP,YAAYA,UAAlB;AAAA,iBAAlB,CAAP;AACH;AApFmB;AAAA;AAAA;;AAAA,QAuFlBiB,OAvFkB;AAwFpB,yBAAYI,EAAZ,EAAgBT,IAAhB,EAAsBC,IAAtB,EAA4B;AAAA;;AACxB,iBAAKQ,EAAL,GAAUA,EAAV;AACA,iBAAKT,IAAL,GAAYA,IAAZ;AACA,iBAAKC,IAAL,GAAYA,IAAZ;AACA,iBAAKK,GAAL,GAAW,KAAKI,SAAL,EAAX;AACH;;AA7FmB;AAAA;AAAA,wCA+FR;AAAA;;AACR,oBAAIJ,MAAM,SAANA,GAAM,CAACK,GAAD,EAAMC,IAAN,EAAe;AACrB,2BAAO,OAAKH,EAAL,CAAQI,KAAR,CAAc,OAAKC,IAAL,CAAUH,GAAV,EAAeC,IAAf,CAAd,CAAP;AACH,iBAFD;AAGAN,oBAAIS,IAAJ,GAAW,IAAX;AACA,uBAAOT,GAAP;AACH;AArGmB;AAAA;AAAA,kCAuGd;AACF,uBAAO,KAAKG,EAAL,CAAQ7B,QAAR,GAAmB,KAAKqB,IAA/B;AACH;AAzGmB;AAAA;AAAA,iCA2GfU,GA3Ge,EA2GVC,IA3GU,EA2GJ;AACZ,qBAAKI,WAAL,CAAiBL,GAAjB;AACA,uBAAO,KAAKM,mBAAL,CAAyBN,GAAzB,EAA8BC,IAA9B,CAAP;AACH;AA9GmB;AAAA;AAAA,gDAgHAD,GAhHA,EAgHKC,IAhHL,EAgHW;AAAA;;AAC3B,oBAAI,CAACA,IAAL,EAAW;AACPA,2BAAO,KAAKM,cAAL,CAAoBP,GAApB,CAAP;AACH;;AAED,uBAAO,YAAM;AACT,wBAAI,OAAKQ,QAAL,CAAcR,GAAd,CAAJ,EAAwB;AACpB,+BAAO,OAAKL,GAAL,CAASK,GAAT,CAAP;AACH;;AAED,2BAAO,OAAKS,OAAL,CAAaR,IAAb,EAAmBjB,IAAnB,CAAwB,UAAC0B,MAAD,EAAY;AAAA,4BAC/BC,WAD+B,GACND,MADM,CAC/BC,WAD+B;AAAA,4BACfV,IADe,0CACNS,MADM;;AAEvC,+BAAOA,OAAOC,WAAd;AACA,4BAAMC,YAAYD,gBAAgBE,SAAhB,GAA4B,OAAKf,EAAL,CAAQzB,iBAApC,GAAwDsC,WAA1E;AACA,4BAAM9B,UAAU;AACZE,oCAAQ,MADI;AAEZ+B,qCAAS,EAAEF,oBAAF,EAFG;AAGZG,kCAAM,IAHM;AAIZC,kCAAM,yBAAef,IAAf;AAJM,yBAAhB;;AAOA,2CAAOpB,OAAP,EAAgB,OAAKiB,EAAL,CAAQ1B,oBAAxB;;AAEA,+BAAOL,QAAQ,OAAKY,GAAL,EAAR,EAAoBE,OAApB,EAA6BG,IAA7B,CAAkC,UAACiC,QAAD,EAAc;AACnD,mCAAKtB,GAAL,CAASK,GAAT,IAAgBiB,QAAhB;AACA,mCAAOA,QAAP;AAEH,yBAJM,CAAP;AAKH,qBAlBM,CAAP;AAmBH,iBAxBD;AAyBH;AA9ImB;AAAA;AAAA,2CAgJLjB,GAhJK,EAgJA;AAChB,oBAAIxB,OAAO,KAAKsB,EAAL,CAAQtB,IAAR,CAAa,KAAKa,IAAlB,EAAwBe,IAAnC;AACA,uBAAO5B,KAAK0C,OAAL,CAAalB,GAAb,CAAP;AACH;AAnJmB;AAAA;AAAA,oCAqJZC,IArJY,EAqJN;AAAA;;AACV,uBAAO,sBAAY,UAACkB,OAAD,EAAa;AAC5B,wBAAIT,SAAS,EAAb;AACA,uCAAOA,MAAP,EAAeT,IAAf;;AAEA,wBAAImB,iBAAiB,EAArB;AACA,2BAAKC,qBAAL,CAA2BX,MAA3B,EAAmCU,cAAnC;AACA,2BAAKE,qBAAL,CAA2BZ,MAA3B,EAAmCU,cAAnC,EAAmDD,OAAnD;AACH,iBAPM,CAAP;AAQH;AA9JmB;AAAA;AAAA,kDAgKET,MAhKF,EAgKUU,cAhKV,EAgK0BD,OAhK1B,EAgKmC;AACnD,oBAAI,CAACC,eAAehC,MAApB,EAA4B;AACxB+B,4BAAQT,MAAR;AACH,iBAFD,MAEO;AACH,wBAAIpC,UAAU8C,eAAe,CAAf,GAAd;AACA,yBAAK,IAAIlC,IAAI,CAAR,EAAWC,IAAIiC,eAAehC,MAAnC,EAA2CF,IAAIC,CAA/C,EAAkDD,GAAlD,EAAuD;AACnDZ,kCAAUA,QAAQU,IAAR,CAAaoC,eAAelC,CAAf,CAAb,CAAV;AACH;;AAEDZ,4BAAQU,IAAR,CAAa,YAAM;AACfmC,gCAAQT,MAAR;AACH,qBAFD;AAGH;AACJ;AA7KmB;AAAA;AAAA,kDA+KEA,MA/KF,EA+KUU,cA/KV,EA+K0B;AAAA;;AAAA,2CACjCpB,GADiC;AAEtC,wBAAI,CAACU,OAAOa,cAAP,CAAsBvB,GAAtB,CAAL,EAAiC;AAC7B;AACH;;AAED,wBAAIwB,QAAQd,OAAOV,GAAP,CAAZ;AACA,wBAAIwB,iBAAiBC,QAArB,EAA+B;AAC3BL,uCAAe3B,IAAf,CAAoB,YAAM;AACtB,mCAAO+B,QAAQxC,IAAR,CAAa,UAAC0C,WAAD,EAAiB;AACjChB,uCAAOV,GAAP,IAAc0B,WAAd;AACH,6BAFM,CAAP;AAGH,yBAJD;AAKA;AACH;AACD,wBAAIF,iBAAiBG,MAArB,EAA6B;AACzB,+BAAKN,qBAAL,CAA2BG,KAA3B,EAAkCJ,cAAlC;AACA;AAAA;AAAA;AACH;AAlBqC;;AAC1C,qBAAK,IAAIpB,GAAT,IAAgBU,MAAhB,EAAwB;AAAA,qCAAfV,GAAe;;AAAA;AAAA;AAYhB;;AAZgB;AAAA;AAAA;AAkBvB;AACJ;AAnMmB;AAAA;AAAA,wCAqMRA,GArMQ,EAqMH;AACb,oBAAI,KAAK4B,QAAL,CAAc5B,GAAd,CAAJ,EAAwB;AACpB;AACH;AACD,oBAAII,OAAO,IAAX;AACA,qBAAKT,GAAL,CAASK,GAAT,IAAgB,KAAKF,EAAL,CAAQ3B,eAAR,CAAwB0D,MAAxB,CAA+B,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC9DD,wBAAIC,QAAJ,IAAgB,YAAM;AAClB,+BAAO,sBAAY,UAACZ,OAAD;AAAA,mCAAaA,QAAQf,KAAKT,GAAL,CAASK,GAAT,EAAc+B,QAAd,CAAR,CAAb;AAAA,yBAAZ,CAAP;AACH,qBAFD;AAGA,2BAAOD,GAAP;AACH,iBALe,EAKb,EALa,CAAhB;AAMA,qBAAKnC,GAAL,CAASK,GAAT,EAAcgC,QAAd,GAAyB,IAAzB;AACH;AAjNmB;AAAA;AAAA,qCAmNXhC,GAnNW,EAmNN;AACV,uBAAO,KAAKL,GAAL,CAASK,GAAT,KAAiB,CAAC,KAAK4B,QAAL,CAAc5B,GAAd,CAAzB;AACH;AArNmB;AAAA;AAAA,qCAuNXA,GAvNW,EAuNN;AACV,uBAAO,KAAKL,GAAL,CAASK,GAAT,KAAiB,KAAKL,GAAL,CAASK,GAAT,EAAcgC,QAAtC;AACH;AAzNmB;AAAA;AAAA;;AAAA,QA4NlBpC,IA5NkB;AA6NpB,sBAAYE,EAAZ,EAAgBT,IAAhB,EAAsB;AAAA;;AAClB,iBAAKS,EAAL,GAAUA,EAAV;AACA,iBAAKT,IAAL,GAAYA,IAAZ;AACA,iBAAKY,IAAL,GAAY,EAAZ;AACA,iBAAKN,GAAL,GAAW,KAAKI,SAAL,EAAX;AACH;;AAlOmB;AAAA;AAAA,wCAoOR;AAAA;;AACR,oBAAIJ,MAAM,SAANA,GAAM,CAACK,GAAD,EAAMC,IAAN,EAAe;AACrB,2BAAKgC,eAAL,CAAqBjC,GAArB;AACA,wBAAIC,IAAJ,EAAU;AACR,+BAAKA,IAAL,CAAUD,GAAV,IAAiBC,IAAjB;AACD;AACD,2BAAO,OAAKN,GAAL,CAASK,GAAT,CAAP;AACH,iBAND;AAOAL,oBAAIS,IAAJ,GAAW,IAAX;AACA,uBAAOT,GAAP;AACH;AA9OmB;AAAA;AAAA,oCAgPZK,GAhPY,EAgPP;AACT,uBAAO,KAAKC,IAAL,CAAUD,GAAV,CAAP;AACH;AAlPmB;AAAA;AAAA,4CAoPJA,GApPI,EAoPC;AAAA;;AACjB,oBAAI,KAAK4B,QAAL,CAAc5B,GAAd,CAAJ,EAAwB;AACpB;AACH;AACD,qBAAKL,GAAL,CAASK,GAAT,IAAgB,KAAKF,EAAL,CAAQ3B,eAAR,CAAwB0D,MAAxB,CAA+B,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC9DD,wBAAIC,QAAJ,IAAgB,YAAM;AAClB,+BAAO,OAAKG,aAAL,GAAqB/B,IAArB,CAA0BH,GAA1B,IAAiChB,IAAjC,CAAsC,UAAC0B,MAAD;AAAA,mCAAYA,OAAOqB,QAAP,CAAZ;AAAA,yBAAtC,CAAP;AACH,qBAFD;AAGA,2BAAOD,GAAP;AACH,iBALe,EAKb,EALa,CAAhB;AAMA,qBAAKnC,GAAL,CAASK,GAAT,EAAcgC,QAAd,GAAyB,IAAzB;AACH;AA/PmB;AAAA;AAAA,qCAiQXhC,GAjQW,EAiQN;AACV,uBAAO,KAAKL,GAAL,CAASK,GAAT,KAAiB,KAAKL,GAAL,CAASK,GAAT,EAAcgC,QAAtC;AACH;AAnQmB;AAAA;AAAA,4CAqQJ;AACZ,uBAAO,KAAKlC,EAAL,CAAQ,KAAKT,IAAb,EAAmBe,IAA1B;AACH;AAvQmB;AAAA;AAAA;;AA0QxB,WAAO,IAAIpC,QAAJ,EAAP;AACH,C","file":"fixtures.js","sourcesContent":["import {extend} from './utils';\n\nconst DEFAULT_BASE_URL = '/fixtures';\nconst DEFAULT_RESET_URL = '/_ah/yawp/datastore/delete-all';\nconst DEFAULT_LAZY_PROPERTIES = ['id']; // needed till harmony proxies\nconst DEFAULT_FETCH_OPTIONS = {};\n\nexport default (request) => {\n\n    class Fixtures {\n        constructor() {\n            this._baseUrl = DEFAULT_BASE_URL;\n            this._resetUrl = DEFAULT_RESET_URL;\n            this._lazyProperties = DEFAULT_LAZY_PROPERTIES;\n            this._defaultFetchOptions = DEFAULT_FETCH_OPTIONS;\n            this._defaultNamespace = null;\n            this.promise = null;\n            this.fixtures = [];\n            this.lazy = {};\n        }\n\n        config(callback) {\n            callback(this);\n        }\n\n        defaultNamespace(ns) {\n            this._defaultNamespace = ns;\n        }\n\n        baseUrl(url) {\n            this._baseUrl = url;\n        }\n\n        resetUrl(url) {\n            this._resetUrl = url;\n        }\n\n        lazyProperties(properties) {\n            this._lazyProperties = properties;\n        }\n\n        defaultFetchOptions(options) {\n            extend(this._defaultFetchOptions, options);\n        }\n\n        reset(all) {\n            return request(this._resetUrl, {\n                method: 'GET'\n            }).then(() => {\n                this.clear(all);\n            });\n        }\n\n        clear(all) {\n            this.promise = null;\n            for (let i = 0, l = this.fixtures.length; i < l; i++) {\n                var name = this.fixtures[i].name;\n                var path = this.fixtures[i].path;\n                this.bindFixture(name, path);\n                all && this.bindLazy(name, path);\n            }\n        }\n\n        bind(name, path) {\n            this.fixtures.push({name, path});\n            this.bindFixture(name, path);\n            this.bindLazy(name);\n        }\n\n        bindFixture(name, path) {\n            this[name] = new Fixture(this, name, path).api;\n        }\n\n        bindLazy(name) {\n            this.lazy[name] = new Lazy(this, name).api;\n        }\n\n        chain(promiseFn) {\n            if (!this.promise) {\n                this.promise = promiseFn();\n            } else {\n                this.promise = this.promise.then(promiseFn);\n            }\n            return this.promise;\n        }\n\n        load(callback) {\n            if (!this.promise) {\n                return new Promise(() => callback && callback());\n            }\n            return this.promise.then(() => callback && callback());\n        }\n    }\n\n    class Fixture {\n        constructor(fx, name, path) {\n            this.fx = fx;\n            this.name = name;\n            this.path = path;\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            var api = (key, data) => {\n                return this.fx.chain(this.load(key, data));\n            };\n            api.self = this;\n            return api;\n        }\n\n        url() {\n            return this.fx._baseUrl + this.path;\n        }\n\n        load(key, data) {\n            this.createStubs(key);\n            return this.createLoadPromiseFn(key, data);\n        }\n\n        createLoadPromiseFn(key, data) {\n            if (!data) {\n                data = this.getLazyDataFor(key);\n            }\n\n            return () => {\n                if (this.isLoaded(key)) {\n                    return this.api[key];\n                }\n\n                return this.prepare(data).then((object) => {\n                    const { __namespace, ...data } = object;\n                    delete object.__namespace;\n                    const namespace = __namespace === undefined ? this.fx._defaultNamespace : __namespace;\n                    const options = {\n                        method: 'POST',\n                        headers: { namespace },\n                        json: true,\n                        body: JSON.stringify(data),\n                    };\n\n                    extend(options, this.fx._defaultFetchOptions);\n\n                    return request(this.url(), options).then((response) => {\n                        this.api[key] = response;\n                        return response;\n\n                    });\n                });\n            };\n        }\n\n        getLazyDataFor(key) {\n            var lazy = this.fx.lazy[this.name].self;\n            return lazy.getData(key);\n        }\n\n        prepare(data) {\n            return new Promise((resolve) => {\n                let object = {};\n                extend(object, data);\n\n                let lazyProperties = [];\n                this.inspectLazyProperties(object, lazyProperties);\n                this.resolveLazyProperties(object, lazyProperties, resolve);\n            });\n        }\n\n        resolveLazyProperties(object, lazyProperties, resolve) {\n            if (!lazyProperties.length) {\n                resolve(object);\n            } else {\n                var promise = lazyProperties[0]();\n                for (var i = 1, l = lazyProperties.length; i < l; i++) {\n                    promise = promise.then(lazyProperties[i]);\n                }\n\n                promise.then(() => {\n                    resolve(object);\n                });\n            }\n        }\n\n        inspectLazyProperties(object, lazyProperties) {\n            for (let key in object) {\n                if (!object.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                let value = object[key];\n                if (value instanceof Function) {\n                    lazyProperties.push(() => {\n                        return value().then((actualValue) => {\n                            object[key] = actualValue;\n                        });\n                    });\n                    continue;\n                }\n                if (value instanceof Object) {\n                    this.inspectLazyProperties(value, lazyProperties);\n                    return;\n                }\n            }\n        }\n\n        createStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            let self = this;\n            this.api[key] = this.fx._lazyProperties.reduce((map, property) => {\n                map[property] = () => {\n                    return new Promise((resolve) => resolve(self.api[key][property]));\n                };\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        isLoaded(key) {\n            return this.api[key] && !this.hasStubs(key);\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n    }\n\n    class Lazy {\n        constructor(fx, name) {\n            this.fx = fx;\n            this.name = name;\n            this.data = {};\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            let api = (key, data) => {\n                this.createLazyStubs(key);\n                if (data) {\n                  this.data[key] = data;\n                }\n                return this.api[key];\n            };\n            api.self = this;\n            return api;\n        }\n\n        getData(key) {\n            return this.data[key];\n        }\n\n        createLazyStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            this.api[key] = this.fx._lazyProperties.reduce((map, property) => {\n                map[property] = () => {\n                    return this.getFixtureRef().load(key)().then((object) => object[property]);\n                };\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n\n        getFixtureRef() {\n            return this.fx[this.name].self;\n        }\n    }\n\n    return new Fixtures();\n};\n"]}