{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///yawp.min.js","webpack:///webpack/bootstrap 15a74ee5cd89d6c43ec6","webpack:///./yawp-cli.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","config","callback","baseUrl","url","extend","result","arguments","i","l","length","obj","attrname","toUrlParam","jsonParams","Object","keys","map","k","encodeURIComponent","join","defaultAjax","type","options","fail","done","exception","then","error","request","query","callbacks","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","responseJSON","open","setRequestHeader","send","data","extractId","object","where","q","slice","order","sort","limit","fetch","setupQuery","addQueryParameter","stringify","decode","decodeURIComponent","list","first","objects","only","repository","create","update","patch","destroy","actions","actionOptions","action","json","setJson","params","addQueryParameters","get","put","_patch","post","_delete","yawp","baseArg","normalize","arg","ajaxOptions","from","parentBaseArg","parentBase","transform","t","sync","async","key","value","api"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,KAAAD,IAEAD,EAAA,KAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/BL,EAAOD,QAAUM,EAAoB,IAKhC,SAASL,EAAQD,GE7DvBC,EAAAD,QAAA,WAIA,QAAAe,GAAAC,GACA,GAAAH,IACAI,QAAA,SAAAC,GACAD,EAAAC,GAIAF,GAAAH,GAGA,QAAAM,KAGA,OAFAC,GAAAC,UAAA,OAEAC,EAAA,EAAAC,EAAAF,UAAAG,OAA6CD,EAAAD,EAAOA,IAAA,CACpD,GAAAG,GAAAJ,UAAAC,EACA,QAAAI,KAAAD,GACAL,EAAAM,GAAAD,EAAAC,GAIA,MAAAN,GAGA,QAAAO,GAAAC,GACA,MAAAC,QAAAC,KAAAF,GAAAG,IAAA,SAAAC,GACA,MAAAC,oBAAAD,GAAA,IAAAC,mBAAAL,EAAAI,MACGE,KAAA,KAGH,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GACAC,EACAC,EACAC,EACAC,EACAC,EACAzB,CAEAA,GAAAD,EAAAoB,EAAAnB,KAAAmB,EAAAO,MAAA,IAAAjB,EAAAU,EAAAO,OAAA,GAEA,IAAAC,IACAP,KAAA,SAAAtB,GAEA,MADAsB,GAAAtB,EACA6B,GAEAN,KAAA,SAAAvB,GAEA,MADAuB,GAAAvB,EACA6B,GAEAL,UAAA,SAAAxB,GAEA,MADAwB,GAAAxB,EACA6B,GAEAJ,KAAA,SAAAzB,GAEA,MADAyB,GAAAzB,EACA6B,GAEAH,MAAA,SAAA1B,GAEA,MADA0B,GAAA1B,EACA6B,GAgCA,OA5BAF,GAAA,GAAAG,gBACAH,EAAAI,mBAAA,WACA,IAAAJ,EAAAK,aACA,MAAAL,EAAAM,QACAV,GACAA,EAAAW,KAAAC,MAAAR,EAAAS,eAEAX,GACAA,EAAAS,KAAAC,MAAAR,EAAAS,iBAGAd,GACAA,EAAAK,GAEAD,GACAA,EAAAvB,KAAqBwB,GAAYU,aAAAH,KAAAC,MAAAR,EAAAS,iBAEjCZ,GACAA,EAAAU,KAAAC,MAAAR,EAAAS,kBAMAT,EAAAW,KAAAlB,EAAAlB,GAAA,GACAyB,EAAAY,iBAAA,iDACAZ,EAAAa,KAAAnB,EAAAoB,MAEAZ,EAGA,QAAAa,GAAAC,GACA,GAAAA,EAAAlD,GACA,MAAAkD,GAAAlD,EAEA,0EAGA,QAAAmC,GAAAP,GAGA,QAAAuB,GAAAH,GAMA,MALA,KAAApC,UAAAG,OACAqC,EAAAD,MAAAH,EAEAI,EAAAD,SAAAE,MAAAnD,KAAAU,WAEAjB,KAGA,QAAA2D,GAAAN,GAEA,MADAI,GAAAE,MAAAN,EACArD,KAGA,QAAA4D,GAAAP,GAEA,MADAI,GAAAG,KAAAP,EACArD,KAGA,QAAA6D,GAAAR,GAEA,MADAI,GAAAI,MAAAR,EACArD,KAGA,QAAA8D,GAAAlD,GACA,MAAAmB,GAAA,MAAAE,KAAAE,KAAAvB,GAGA,QAAAmD,KACAtC,OAAAC,KAAA+B,GAAArC,OAAA,GACAa,EAAA+B,kBAAA,IAAAlB,KAAAmB,UAAAR,IAIA,QAAA3C,GAAAoD,GACAH,GACA,IAAAjD,GAAAD,EAAAoB,IAAAnB,KAAAmB,IAAAO,MAAA,IAAAjB,EAAAU,IAAAO,OAAA,GACA,OAAA0B,GACAC,mBAAArD,GAEAA,EAGA,QAAAsD,GAAAxD,GAEA,MADAmD,KACAhC,EAAA,MAAAE,KAAAE,KAAAvB,GAGA,QAAAyD,GAAAzD,GAGA,MAFAiD,GAAA,GAEAO,EAAA,SAAAE,GACA,GAAAf,GAAA,GAAAe,EAAAlD,OAAA,KAAAkD,EAAA,EACA1D,IACAA,EAAA2C,KAKA,QAAAgB,GAAA3D,GACA,MAAAwD,GAAA,SAAAE,GACA,MAAAA,EAAAlD,OACA,4BAAAkD,EAAAlD,OAAA,UAEAR,IACAA,EAAA0D,EAAA,MAnEA,GAAAb,KAwEA,QACAD,QACAG,QACAC,OACAC,QACAC,QACAM,OACAC,QACAE,OACAzD,OAIA,QAAA0D,GAAAvC,GACA,QAAAwC,GAAAlB,GAEA,MADAtB,KAAAoB,KAAAP,KAAAmB,UAAAV,GACAxB,EAAA,OAAAE,KAGA,QAAAyC,GAAAnB,GAEA,MADAtB,KAAAoB,KAAAP,KAAAmB,UAAAV,GACAxB,EAAA,MAAAE,KAGA,QAAA0C,GAAApB,GAEA,MADAtB,KAAAoB,KAAAP,KAAAmB,UAAAV,GACAxB,EAAA,QAAAE,KAGA,QAAA2C,KACA,MAAA7C,GAAA,SAAAE,KAGA,OACAwC,SACAC,SACAC,QACAC,WAIA,QAAAC,GAAA5C,GACA,QAAA6C,GAAAC,GAEA,MADA9C,KAAAnB,KAAA,IAAAiE,EACA9C,IAGA,QAAA+C,GAAAzB,GAEA,MADAtB,GAAAgD,QAAA1B,GACAvD,KAGA,QAAAkF,MAEA,MADAjD,GAAAkD,mBAAAD,GACAlF,KAGA,QAAAoF,GAAAL,GACA,MAAAhD,GAAA,MAAA+C,EAAAC,IAGA,QAAAM,GAAAN,GACA,MAAAhD,GAAA,MAAA+C,EAAAC,IAGA,QAAAO,GAAAP,GACA,MAAAhD,GAAA,QAAA+C,EAAAC,IAGA,QAAAQ,GAAAR,GACA,MAAAhD,GAAA,OAAA+C,EAAAC,IAGA,QAAAS,GAAAT,GACA,MAAAhD,GAAA,SAAA+C,EAAAC,IAGA,OACAC,OACAE,SACAE,MACAC,MACAC,SACAC,OACAC,WAIA,QAAAC,GAAAC,GACA,QAAAC,GAAAC,GACA,MAAAA,GAGAA,YAAAnE,QACA6B,EAAAsC,GAEAA,EALA,GAYA,QAAA3D,KACA,MAAA4D,GAkBA,QAAAC,GAAAC,GACA,GAAAC,GAAAL,EAAAI,EAEA,OADA9D,KAAAnB,IAAAkF,EAAA/D,IAAAnB,IACAd,KAGA,QAAAiG,GAAAC,GAEA,MADAjE,GAAA+B,kBAAA,IAAAkC,GACAlG,KAGA,QAAAmG,KAEA,MADAN,GAAAO,OAAA,EACApG,KApCA,GAAA6F,IACA/E,IAAA6E,EAAAD,GAsCA,OA/BAzD,GAAAgD,QAAA,SAAA1B,GACAsC,EAAAxC,KAAAP,KAAAmB,UAAAV,IAGAtB,EAAAkD,mBAAA,SAAAD,GACAW,EAAArD,MAAAzB,EAAA8E,EAAArD,MAAA0C,IAGAjD,EAAA+B,kBAAA,SAAAqC,EAAAC,GACAT,EAAArD,QACAqD,EAAArD,UAEAqD,EAAArD,MAAA6D,GAAAC,GAmBAvF,GACA+E,OACAG,YACAE,QACS3D,EAAAP,GAAAuC,EAAAvC,GAAA4C,EAAA5C,IAGT,QAAAyC,GAAAnB,GACA,GAAAlD,GAAAiD,EAAAC,EACA,OAAAkC,GAAApF,GAAAqE,OAAAnB,GAGA,QAAAoB,GAAApB,GACA,GAAAlD,GAAAiD,EAAAC,EACA,OAAAkC,GAAApF,GAAAsE,MAAApB,GAGA,QAAAqB,GAAArB,GACA,GAAAlD,GAAAiD,EAAAC,EACA,OAAAkC,GAAApF,GAAAuE,QAAArB,GA7UA,GAAA1C,GAAA,OAgVA0F,GACA5F,SACA+D,SACAC,QACAC,UAGA,OAAA7D,GAAA0E,EAAAc","file":"yawp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yawp\"] = factory();\n\telse\n\t\troot[\"yawp\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yawp\"] = factory();\n\telse\n\t\troot[\"yawp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function () {\n\t\n\t    var baseUrl = '/api';\n\t\n\t    function config(callback) {\n\t        var c = {\n\t            baseUrl: function (url) {\n\t                baseUrl = url;\n\t            }\n\t        };\n\t\n\t        callback(c);\n\t    }\n\t\n\t    function extend() {\n\t        var result = arguments[0] || {};\n\t\n\t        for (var i = 1, l = arguments.length; i < l; i++) {\n\t            var obj = arguments[i];\n\t            for (var attrname in obj) {\n\t                result[attrname] = obj[attrname];\n\t            }\n\t        }\n\t\n\t        return result;\n\t    }\n\t\n\t\tfunction toUrlParam(jsonParams) {\n\t\t\treturn Object.keys(jsonParams).map(function(k) {\n\t\t\t    return encodeURIComponent(k) + '=' + encodeURIComponent(jsonParams[k])\n\t\t\t}).join('&')\n\t\t}\n\t\n\t    function defaultAjax(type, options) {\n\t        var fail\n\t            ,done\n\t\t\t\t,exception\n\t\t\t\t,then\n\t\t\t\t,error\n\t            ,request\n\t            ,url;\n\t\n\t        url = baseUrl + options.url + (options.query ? '?' + toUrlParam(options.query) : '');\n\t\n\t\t\tvar callbacks = {\n\t            fail: function (callback) {\n\t                fail = callback;\n\t                return callbacks;\n\t            },\n\t            done: function (callback) {\n\t                done = callback;\n\t                return callbacks;\n\t            },\n\t\t\t\texception: function (callback) {\n\t                exception = callback;\n\t                return callbacks;\n\t            },\n\t\t\t\tthen: function (callback) {\n\t                then = callback;\n\t                return callbacks;\n\t            },\n\t\t\t\terror: function (callback) {\n\t                error = callback;\n\t                return callbacks;\n\t            }\n\t        };\n\t\n\t        request = new XMLHttpRequest();\n\t        request.onreadystatechange = function() {\n\t        \tif (request.readyState === 4) {\n\t\t\t\t\tif(request.status === 200) {\n\t\t\t\t\t\tif(done) {\n\t\t\t\t\t\t\tdone(JSON.parse(request.responseText));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(then) {\n\t\t\t\t\t\t\tthen(JSON.parse(request.responseText));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(fail) {\n\t\t\t\t\t\t\tfail(request);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(error) {\n\t\t\t\t\t\t\terror(extend({}, request, {responseJSON:JSON.parse(request.responseText)}));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(exception) {\n\t\t\t\t\t\t\texception(JSON.parse(request.responseText));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t            }\n\t        };\n\t\n\t        request.open(type, url, true);\n\t        request.setRequestHeader(\"Content-type\", \"application/json;charset=UTF-8\");\n\t        request.send(options.data);\n\t\n\t        return callbacks;\n\t    }\n\t\n\t    function extractId(object) {\n\t        if (object.id) {\n\t            return object.id;\n\t        }\n\t        throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n\t    }\n\t\n\t    function query(options) {\n\t        var q = {};\n\t\n\t        function where(data) {\n\t            if (arguments.length === 1) {\n\t                q.where = data;\n\t            } else {\n\t                q.where = [].slice.call(arguments);\n\t            }\n\t            return this;\n\t        }\n\t\n\t        function order(data) {\n\t            q.order = data;\n\t            return this;\n\t        }\n\t\n\t        function sort(data) {\n\t            q.sort = data;\n\t            return this;\n\t        }\n\t\n\t        function limit(data) {\n\t            q.limit = data;\n\t            return this;\n\t        }\n\t\n\t        function fetch(callback) {\n\t            return defaultAjax('GET', options()).done(callback);\n\t        }\n\t\n\t        function setupQuery() {\n\t            if (Object.keys(q).length > 0) {\n\t                options.addQueryParameter('q', JSON.stringify(q));\n\t            }\n\t        }\n\t\n\t        function url(decode) {\n\t            setupQuery();\n\t            var url = baseUrl + options().url + (options().query ? '?' + toUrlParam(options().query) : '');\n\t            if (decode) {\n\t                return decodeURIComponent(url);\n\t            }\n\t            return url;\n\t        }\n\t\n\t        function list(callback) {\n\t            setupQuery();\n\t            return defaultAjax('GET', options()).done(callback);\n\t        }\n\t\n\t        function first(callback) {\n\t            limit(1);\n\t\n\t            return list(function (objects) {\n\t                var object = objects.length == 0 ? null : objects[0];\n\t                if (callback) {\n\t                    callback(object);\n\t                }\n\t            });\n\t        }\n\t\n\t        function only(callback) {\n\t            return list(function (objects) {\n\t                if (objects.length != 1) {\n\t                    throw 'called only but got ' + objects.length + ' results';\n\t                }\n\t                if (callback) {\n\t                    callback(objects[0]);\n\t                }\n\t            });\n\t        }\n\t\n\t        return {\n\t            where: where,\n\t            order: order,\n\t            sort: sort,\n\t            limit: limit,\n\t            fetch: fetch,\n\t            list: list,\n\t            first: first,\n\t            only: only,\n\t            url: url\n\t        };\n\t    }\n\t\n\t    function repository(options) {\n\t        function create(object) {\n\t            options().data = JSON.stringify(object);\n\t            return defaultAjax('POST', options());\n\t        }\n\t\n\t        function update(object) {\n\t            options().data = JSON.stringify(object);\n\t            return defaultAjax('PUT', options());\n\t        }\n\t\n\t        function patch(object) {\n\t            options().data = JSON.stringify(object);\n\t            return defaultAjax('PATCH', options());\n\t        }\n\t\n\t        function destroy() {\n\t            return defaultAjax('DELETE', options());\n\t        }\n\t\n\t        return {\n\t            create: create,\n\t            update: update,\n\t            patch: patch,\n\t            destroy: destroy\n\t        };\n\t    }\n\t\n\t    function actions(options) {\n\t        function actionOptions(action) {\n\t            options().url += '/' + action;\n\t            return options();\n\t        }\n\t\n\t        function json(object) {\n\t            options.setJson(object);\n\t            return this;\n\t        }\n\t\n\t        function params(params) {\n\t            options.addQueryParameters(params);\n\t            return this;\n\t        }\n\t\n\t        function get(action) {\n\t            return defaultAjax('GET', actionOptions(action));\n\t        }\n\t\n\t        function put(action) {\n\t            return defaultAjax('PUT', actionOptions(action));\n\t        }\n\t\n\t        function _patch(action) {\n\t            return defaultAjax('PATCH', actionOptions(action));\n\t        }\n\t\n\t        function post(action) {\n\t            return defaultAjax('POST', actionOptions(action));\n\t        }\n\t\n\t        function _delete(action) {\n\t            return defaultAjax('DELETE', actionOptions(action));\n\t        }\n\t\n\t        return {\n\t            json: json,\n\t            params: params,\n\t            get: get,\n\t            put: put,\n\t            _patch: _patch,\n\t            post: post,\n\t            _delete: _delete\n\t        };\n\t    }\n\t\n\t    function yawp(baseArg) {\n\t        function normalize(arg) {\n\t            if (!arg) {\n\t                return '';\n\t            }\n\t            if (arg instanceof Object) {\n\t                return extractId(arg);\n\t            }\n\t            return arg;\n\t        }\n\t\n\t        var ajaxOptions = {\n\t            url: normalize(baseArg)\n\t        }\n\t\n\t        function options() {\n\t            return ajaxOptions;\n\t        }\n\t\n\t        options.setJson = function (object) {\n\t            ajaxOptions.data = JSON.stringify(object);\n\t        };\n\t\n\t        options.addQueryParameters = function (params) {\n\t            ajaxOptions.query = extend(ajaxOptions.query, params);\n\t        };\n\t\n\t        options.addQueryParameter = function (key, value) {\n\t            if (!ajaxOptions.query) {\n\t                ajaxOptions.query = {};\n\t            }\n\t            ajaxOptions.query[key] = value;\n\t        };\n\t\n\t        function from(parentBaseArg) {\n\t            var parentBase = normalize(parentBaseArg);\n\t            options().url = parentBase + options().url;\n\t            return this;\n\t        }\n\t\n\t        function transform(t) {\n\t            options.addQueryParameter('t', t);\n\t            return this;\n\t        }\n\t\n\t        function sync() {\n\t            ajaxOptions.async = false;\n\t            return this;\n\t        }\n\t\n\t        return extend({\n\t            from: from,\n\t            transform: transform,\n\t            sync: sync\n\t        }, query(options), repository(options), actions(options));\n\t    }\n\t\n\t    function update(object) {\n\t        var id = extractId(object);\n\t        return yawp(id).update(object);\n\t    }\n\t\n\t    function patch(object) {\n\t        var id = extractId(object);\n\t        return yawp(id).patch(object);\n\t    }\n\t\n\t    function destroy(object) {\n\t        var id = extractId(object);\n\t        return yawp(id).destroy(object);\n\t    }\n\t\n\t    var api = {\n\t        config: config,\n\t        update: update,\n\t        patch: patch,\n\t        destroy: destroy\n\t    };\n\t\n\t\treturn extend(yawp, api);\n\t\t\n\t})();\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** yawp.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 15a74ee5cd89d6c43ec6\n **/","module.exports = (function () {\n\n    var baseUrl = '/api';\n\n    function config(callback) {\n        var c = {\n            baseUrl: function (url) {\n                baseUrl = url;\n            }\n        };\n\n        callback(c);\n    }\n\n    function extend() {\n        var result = arguments[0] || {};\n\n        for (var i = 1, l = arguments.length; i < l; i++) {\n            var obj = arguments[i];\n            for (var attrname in obj) {\n                result[attrname] = obj[attrname];\n            }\n        }\n\n        return result;\n    }\n\n\tfunction toUrlParam(jsonParams) {\n\t\treturn Object.keys(jsonParams).map(function(k) {\n\t\t    return encodeURIComponent(k) + '=' + encodeURIComponent(jsonParams[k])\n\t\t}).join('&')\n\t}\n\n    function defaultAjax(type, options) {\n        var fail\n            ,done\n\t\t\t,exception\n\t\t\t,then\n\t\t\t,error\n            ,request\n            ,url;\n\n        url = baseUrl + options.url + (options.query ? '?' + toUrlParam(options.query) : '');\n\n\t\tvar callbacks = {\n            fail: function (callback) {\n                fail = callback;\n                return callbacks;\n            },\n            done: function (callback) {\n                done = callback;\n                return callbacks;\n            },\n\t\t\texception: function (callback) {\n                exception = callback;\n                return callbacks;\n            },\n\t\t\tthen: function (callback) {\n                then = callback;\n                return callbacks;\n            },\n\t\t\terror: function (callback) {\n                error = callback;\n                return callbacks;\n            }\n        };\n\n        request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n        \tif (request.readyState === 4) {\n\t\t\t\tif(request.status === 200) {\n\t\t\t\t\tif(done) {\n\t\t\t\t\t\tdone(JSON.parse(request.responseText));\n\t\t\t\t\t}\n\t\t\t\t\tif(then) {\n\t\t\t\t\t\tthen(JSON.parse(request.responseText));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(fail) {\n\t\t\t\t\t\tfail(request);\n\t\t\t\t\t}\n\t\t\t\t\tif(error) {\n\t\t\t\t\t\terror(extend({}, request, {responseJSON:JSON.parse(request.responseText)}));\n\t\t\t\t\t}\n\t\t\t\t\tif(exception) {\n\t\t\t\t\t\texception(JSON.parse(request.responseText));\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        };\n\n        request.open(type, url, true);\n        request.setRequestHeader(\"Content-type\", \"application/json;charset=UTF-8\");\n        request.send(options.data);\n\n        return callbacks;\n    }\n\n    function extractId(object) {\n        if (object.id) {\n            return object.id;\n        }\n        throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n    }\n\n    function query(options) {\n        var q = {};\n\n        function where(data) {\n            if (arguments.length === 1) {\n                q.where = data;\n            } else {\n                q.where = [].slice.call(arguments);\n            }\n            return this;\n        }\n\n        function order(data) {\n            q.order = data;\n            return this;\n        }\n\n        function sort(data) {\n            q.sort = data;\n            return this;\n        }\n\n        function limit(data) {\n            q.limit = data;\n            return this;\n        }\n\n        function fetch(callback) {\n            return defaultAjax('GET', options()).done(callback);\n        }\n\n        function setupQuery() {\n            if (Object.keys(q).length > 0) {\n                options.addQueryParameter('q', JSON.stringify(q));\n            }\n        }\n\n        function url(decode) {\n            setupQuery();\n            var url = baseUrl + options().url + (options().query ? '?' + toUrlParam(options().query) : '');\n            if (decode) {\n                return decodeURIComponent(url);\n            }\n            return url;\n        }\n\n        function list(callback) {\n            setupQuery();\n            return defaultAjax('GET', options()).done(callback);\n        }\n\n        function first(callback) {\n            limit(1);\n\n            return list(function (objects) {\n                var object = objects.length == 0 ? null : objects[0];\n                if (callback) {\n                    callback(object);\n                }\n            });\n        }\n\n        function only(callback) {\n            return list(function (objects) {\n                if (objects.length != 1) {\n                    throw 'called only but got ' + objects.length + ' results';\n                }\n                if (callback) {\n                    callback(objects[0]);\n                }\n            });\n        }\n\n        return {\n            where: where,\n            order: order,\n            sort: sort,\n            limit: limit,\n            fetch: fetch,\n            list: list,\n            first: first,\n            only: only,\n            url: url\n        };\n    }\n\n    function repository(options) {\n        function create(object) {\n            options().data = JSON.stringify(object);\n            return defaultAjax('POST', options());\n        }\n\n        function update(object) {\n            options().data = JSON.stringify(object);\n            return defaultAjax('PUT', options());\n        }\n\n        function patch(object) {\n            options().data = JSON.stringify(object);\n            return defaultAjax('PATCH', options());\n        }\n\n        function destroy() {\n            return defaultAjax('DELETE', options());\n        }\n\n        return {\n            create: create,\n            update: update,\n            patch: patch,\n            destroy: destroy\n        };\n    }\n\n    function actions(options) {\n        function actionOptions(action) {\n            options().url += '/' + action;\n            return options();\n        }\n\n        function json(object) {\n            options.setJson(object);\n            return this;\n        }\n\n        function params(params) {\n            options.addQueryParameters(params);\n            return this;\n        }\n\n        function get(action) {\n            return defaultAjax('GET', actionOptions(action));\n        }\n\n        function put(action) {\n            return defaultAjax('PUT', actionOptions(action));\n        }\n\n        function _patch(action) {\n            return defaultAjax('PATCH', actionOptions(action));\n        }\n\n        function post(action) {\n            return defaultAjax('POST', actionOptions(action));\n        }\n\n        function _delete(action) {\n            return defaultAjax('DELETE', actionOptions(action));\n        }\n\n        return {\n            json: json,\n            params: params,\n            get: get,\n            put: put,\n            _patch: _patch,\n            post: post,\n            _delete: _delete\n        };\n    }\n\n    function yawp(baseArg) {\n        function normalize(arg) {\n            if (!arg) {\n                return '';\n            }\n            if (arg instanceof Object) {\n                return extractId(arg);\n            }\n            return arg;\n        }\n\n        var ajaxOptions = {\n            url: normalize(baseArg)\n        }\n\n        function options() {\n            return ajaxOptions;\n        }\n\n        options.setJson = function (object) {\n            ajaxOptions.data = JSON.stringify(object);\n        };\n\n        options.addQueryParameters = function (params) {\n            ajaxOptions.query = extend(ajaxOptions.query, params);\n        };\n\n        options.addQueryParameter = function (key, value) {\n            if (!ajaxOptions.query) {\n                ajaxOptions.query = {};\n            }\n            ajaxOptions.query[key] = value;\n        };\n\n        function from(parentBaseArg) {\n            var parentBase = normalize(parentBaseArg);\n            options().url = parentBase + options().url;\n            return this;\n        }\n\n        function transform(t) {\n            options.addQueryParameter('t', t);\n            return this;\n        }\n\n        function sync() {\n            ajaxOptions.async = false;\n            return this;\n        }\n\n        return extend({\n            from: from,\n            transform: transform,\n            sync: sync\n        }, query(options), repository(options), actions(options));\n    }\n\n    function update(object) {\n        var id = extractId(object);\n        return yawp(id).update(object);\n    }\n\n    function patch(object) {\n        var id = extractId(object);\n        return yawp(id).patch(object);\n    }\n\n    function destroy(object) {\n        var id = extractId(object);\n        return yawp(id).destroy(object);\n    }\n\n    var api = {\n        config: config,\n        update: update,\n        patch: patch,\n        destroy: destroy\n    };\n\n\treturn extend(yawp, api);\n\t\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./yawp-cli.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}