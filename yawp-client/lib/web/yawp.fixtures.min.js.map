{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///yawp.fixtures.min.js","webpack:///webpack/bootstrap 128002c2af748d0f6f19","webpack:///./src/web/yawp.fixtures.js","webpack:///./src/web/request.js","webpack:///./src/commons/utils.js","webpack:///./src/commons/fixtures.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_request","_request2","fixtures","yawp","resolveOrReject","request","options","resolve","reject","readyState","status","json","JSON","parse","responseText","setHeaders","headers","_utils","extend","Accept","Content-Type","key","hasOwnProperty","setRequestHeader","Object","defineProperty","value","url","Promise","query","XMLHttpRequest","onreadystatechange","open","method","toUrlParam","send","body","result","arguments","i","l","length","attrname","jsonParams","keys","map","k","encodeURIComponent","join","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","DEFAULT_BASE_URL","DEFAULT_RESET_URL","DEFAULT_LAZY_PROPERTIES","Fixtures","_baseUrl","_resetUrl","_lazyProperties","promise","lazy","callback","properties","all","_this","then","clear","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_step$value","name","path","bindFixture","bindLazy","err","push","Fixture","api","Lazy","promiseFn","fx","createApi","_this2","data","chain","load","self","createStubs","createLoadPromiseFn","_this3","getLazyDataFor","isLoaded","prepare","object","stringify","response","getData","_this4","lazyProperties","inspectLazyProperties","resolveLazyProperties","_this5","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","Function","actualValue","v","_iterator2","_ret","hasStubs","reduce","property","__stub__","_this6","createLazyStubs","_this7","getFixtureRef"],"mappings":"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","file":"yawp.fixtures.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yawp\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yawp\"] = factory();\n\telse\n\t\troot[\"yawp\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yawp\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yawp\"] = factory();\n\telse\n\t\troot[\"yawp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _request = __webpack_require__(1);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar fixtures = __webpack_require__(3)(_request2.default);\n\tyawp.fixtures = fixtures;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (url, options) {\n\t    return new Promise(function (resolve, reject) {\n\t        var query = options.query;\n\t        delete options.query;\n\t\n\t        var request = new XMLHttpRequest();\n\t\n\t        request.onreadystatechange = function () {\n\t            resolveOrReject(request, options, resolve, reject);\n\t        };\n\t\n\t        request.open(options.method, url + (query ? '?' + (0, _utils.toUrlParam)(query) : ''));\n\t        setHeaders(request, options.headers);\n\t        request.send(options.body);\n\t    });\n\t};\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tfunction resolveOrReject(request, options, resolve, reject) {\n\t    if (request.readyState === 4) {\n\t        if (request.status === 200) {\n\t            resolve(options.json ? JSON.parse(request.responseText) : request.responseText);\n\t        } else {\n\t            reject(request);\n\t        }\n\t    }\n\t}\n\t\n\tfunction setHeaders(request, headers) {\n\t    headers = headers || {};\n\t    (0, _utils.extend)(headers, {\n\t        'Accept': 'application/json',\n\t        'Content-Type': 'application/json;charset=UTF-8'\n\t    });\n\t    for (var key in headers) {\n\t        if (headers.hasOwnProperty(key)) {\n\t            request.setRequestHeader(key, headers[key]);\n\t        }\n\t    }\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.extend = extend;\n\texports.toUrlParam = toUrlParam;\n\tfunction extend() {\n\t    var result = arguments[0] || {};\n\t\n\t    for (var i = 1, l = arguments.length; i < l; i++) {\n\t        var obj = arguments[i];\n\t        for (var attrname in obj) {\n\t            result[attrname] = obj[attrname];\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction toUrlParam(jsonParams) {\n\t    return Object.keys(jsonParams).map(function (k) {\n\t        return encodeURIComponent(k) + '=' + encodeURIComponent(jsonParams[k]);\n\t    }).join('&');\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DEFAULT_BASE_URL = '/fixtures';\n\tvar DEFAULT_RESET_URL = '/_ah/yawp/datastore/delete_all';\n\tvar DEFAULT_LAZY_PROPERTIES = ['id']; // needed till harmony proxies\n\t\n\texports.default = function (request) {\n\t    var Fixtures = function () {\n\t        function Fixtures() {\n\t            _classCallCheck(this, Fixtures);\n\t\n\t            this._baseUrl = DEFAULT_BASE_URL;\n\t            this._resetUrl = DEFAULT_RESET_URL;\n\t            this._lazyProperties = DEFAULT_LAZY_PROPERTIES;\n\t            this.promise = null;\n\t            this.fixtures = [];\n\t            this.lazy = {};\n\t        }\n\t\n\t        _createClass(Fixtures, [{\n\t            key: 'config',\n\t            value: function config(callback) {\n\t                callback(this);\n\t            }\n\t        }, {\n\t            key: 'baseUrl',\n\t            value: function baseUrl(url) {\n\t                this._baseUrl = url;\n\t            }\n\t        }, {\n\t            key: 'resetUrl',\n\t            value: function resetUrl(url) {\n\t                this._resetUrl = url;\n\t            }\n\t        }, {\n\t            key: 'lazyProperties',\n\t            value: function lazyProperties(properties) {\n\t                this._lazyProperties = properties;\n\t            }\n\t        }, {\n\t            key: 'reset',\n\t            value: function reset(all) {\n\t                var _this = this;\n\t\n\t                return request(this._resetUrl, {\n\t                    method: 'GET'\n\t                }).then(function () {\n\t                    _this.clear(all);\n\t                });\n\t            }\n\t        }, {\n\t            key: 'clear',\n\t            value: function clear(all) {\n\t                this.promise = null;\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = this.fixtures[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var _step$value = _step.value;\n\t                        var name = _step$value.name;\n\t                        var path = _step$value.path;\n\t\n\t                        this.bindFixture(name, path);\n\t                        all && this.bindLazy(name, path);\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }, {\n\t            key: 'bind',\n\t            value: function bind(name, path) {\n\t                this.fixtures.push({ name: name, path: path });\n\t                this.bindFixture(name, path);\n\t                this.bindLazy(name);\n\t            }\n\t        }, {\n\t            key: 'bindFixture',\n\t            value: function bindFixture(name, path) {\n\t                this[name] = new Fixture(this, name, path).api;\n\t            }\n\t        }, {\n\t            key: 'bindLazy',\n\t            value: function bindLazy(name) {\n\t                this.lazy[name] = new Lazy(this, name).api;\n\t            }\n\t        }, {\n\t            key: 'chain',\n\t            value: function chain(promiseFn) {\n\t                if (!this.promise) {\n\t                    this.promise = promiseFn();\n\t                } else {\n\t                    this.promise = this.promise.then(promiseFn);\n\t                }\n\t                return this.promise;\n\t            }\n\t        }, {\n\t            key: 'load',\n\t            value: function load(callback) {\n\t                if (!this.promise) {\n\t                    return new Promise(function () {\n\t                        return callback && callback();\n\t                    });\n\t                }\n\t                return this.promise.then(function () {\n\t                    return callback && callback();\n\t                });\n\t            }\n\t        }]);\n\t\n\t        return Fixtures;\n\t    }();\n\t\n\t    var Fixture = function () {\n\t        function Fixture(fx, name, path) {\n\t            _classCallCheck(this, Fixture);\n\t\n\t            this.fx = fx;\n\t            this.name = name;\n\t            this.path = path;\n\t            this.api = this.createApi();\n\t        }\n\t\n\t        _createClass(Fixture, [{\n\t            key: 'createApi',\n\t            value: function createApi() {\n\t                var _this2 = this;\n\t\n\t                var api = function api(key, data) {\n\t                    return _this2.fx.chain(_this2.load(key, data));\n\t                };\n\t                api.self = this;\n\t                return api;\n\t            }\n\t        }, {\n\t            key: 'url',\n\t            value: function url() {\n\t                return this.fx._baseUrl + this.path;\n\t            }\n\t        }, {\n\t            key: 'load',\n\t            value: function load(key, data) {\n\t                this.createStubs(key);\n\t                return this.createLoadPromiseFn(key, data);\n\t            }\n\t        }, {\n\t            key: 'createLoadPromiseFn',\n\t            value: function createLoadPromiseFn(key, data) {\n\t                var _this3 = this;\n\t\n\t                if (!data) {\n\t                    data = this.getLazyDataFor(key);\n\t                }\n\t\n\t                return function () {\n\t                    if (_this3.isLoaded(key)) {\n\t                        return _this3.api[key];\n\t                    }\n\t\n\t                    return _this3.prepare(data).then(function (object) {\n\t                        return request(_this3.url(), {\n\t                            method: 'POST',\n\t                            json: true,\n\t                            body: JSON.stringify(object)\n\t                        }).then(function (response) {\n\t                            _this3.api[key] = response;\n\t                            return response;\n\t                        });\n\t                    });\n\t                };\n\t            }\n\t        }, {\n\t            key: 'getLazyDataFor',\n\t            value: function getLazyDataFor(key) {\n\t                var lazy = this.fx.lazy[this.name].self;\n\t                return lazy.getData(key);\n\t            }\n\t        }, {\n\t            key: 'prepare',\n\t            value: function prepare(data) {\n\t                var _this4 = this;\n\t\n\t                return new Promise(function (resolve) {\n\t                    var object = {};\n\t                    (0, _utils.extend)(object, data);\n\t\n\t                    var lazyProperties = [];\n\t                    _this4.inspectLazyProperties(object, lazyProperties);\n\t                    _this4.resolveLazyProperties(object, lazyProperties, resolve);\n\t                });\n\t            }\n\t        }, {\n\t            key: 'resolveLazyProperties',\n\t            value: function resolveLazyProperties(object, lazyProperties, resolve) {\n\t                if (!lazyProperties.length) {\n\t                    resolve(object);\n\t                } else {\n\t                    var promise = lazyProperties[0]();\n\t                    for (var i = 1, l = lazyProperties.length; i < l; i++) {\n\t                        promise = promise.then(lazyProperties[i]);\n\t                    }\n\t\n\t                    promise.then(function () {\n\t                        resolve(object);\n\t                    });\n\t                }\n\t            }\n\t        }, {\n\t            key: 'inspectLazyProperties',\n\t            value: function inspectLazyProperties(object, lazyProperties) {\n\t                var _this5 = this;\n\t\n\t                var _iteratorNormalCompletion2 = true;\n\t                var _didIteratorError2 = false;\n\t                var _iteratorError2 = undefined;\n\t\n\t                try {\n\t                    var _loop = function _loop() {\n\t                        var key = _step2.value;\n\t\n\t                        var value = object[key];\n\t                        if (value instanceof Function) {\n\t                            lazyProperties.push(function () {\n\t                                return value().then(function (actualValue) {\n\t                                    object[key] = actualValue;\n\t                                });\n\t                            });\n\t                            return 'continue';\n\t                        }\n\t                        if (value instanceof Object) {\n\t                            _this5.inspectLazyProperties(value, lazyProperties);\n\t                            return {\n\t                                v: void 0\n\t                            };\n\t                        }\n\t                    };\n\t\n\t                    for (var _iterator2 = Object.keys(object)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                        var _ret = _loop();\n\t\n\t                        switch (_ret) {\n\t                            case 'continue':\n\t                                continue;\n\t\n\t                            default:\n\t                                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError2 = true;\n\t                    _iteratorError2 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                            _iterator2.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError2) {\n\t                            throw _iteratorError2;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }, {\n\t            key: 'createStubs',\n\t            value: function createStubs(key) {\n\t                if (this.hasStubs(key)) {\n\t                    return;\n\t                }\n\t                var self = this;\n\t                this.api[key] = this.fx._lazyProperties.reduce(function (map, property) {\n\t                    map[property] = function () {\n\t                        return new Promise(function (resolve) {\n\t                            return resolve(self.api[key][property]);\n\t                        });\n\t                    };\n\t                    return map;\n\t                }, {});\n\t                this.api[key].__stub__ = true;\n\t            }\n\t        }, {\n\t            key: 'isLoaded',\n\t            value: function isLoaded(key) {\n\t                return this.api[key] && !this.hasStubs(key);\n\t            }\n\t        }, {\n\t            key: 'hasStubs',\n\t            value: function hasStubs(key) {\n\t                return this.api[key] && this.api[key].__stub__;\n\t            }\n\t        }]);\n\t\n\t        return Fixture;\n\t    }();\n\t\n\t    var Lazy = function () {\n\t        function Lazy(fx, name) {\n\t            _classCallCheck(this, Lazy);\n\t\n\t            this.fx = fx;\n\t            this.name = name;\n\t            this.data = {};\n\t            this.api = this.createApi();\n\t        }\n\t\n\t        _createClass(Lazy, [{\n\t            key: 'createApi',\n\t            value: function createApi() {\n\t                var _this6 = this;\n\t\n\t                var api = function api(key, data) {\n\t                    _this6.createLazyStubs(key);\n\t                    _this6.data[key] = data;\n\t                };\n\t                api.self = this;\n\t                return api;\n\t            }\n\t        }, {\n\t            key: 'getData',\n\t            value: function getData(key) {\n\t                return this.data[key];\n\t            }\n\t        }, {\n\t            key: 'createLazyStubs',\n\t            value: function createLazyStubs(key) {\n\t                var _this7 = this;\n\t\n\t                if (this.hasStubs(key)) {\n\t                    return;\n\t                }\n\t                this.api[key] = this.fx._lazyProperties.reduce(function (map, property) {\n\t                    map[property] = function () {\n\t                        return _this7.getFixtureRef().load(key)().then(function (object) {\n\t                            return object[property];\n\t                        });\n\t                    };\n\t                    return map;\n\t                }, {});\n\t                this.api[key].__stub__ = true;\n\t            }\n\t        }, {\n\t            key: 'hasStubs',\n\t            value: function hasStubs(key) {\n\t                return this.api[key] && this.api[key].__stub__;\n\t            }\n\t        }, {\n\t            key: 'getFixtureRef',\n\t            value: function getFixtureRef() {\n\t                return this.fx[this.name].self;\n\t            }\n\t        }]);\n\t\n\t        return Lazy;\n\t    }();\n\t\n\t    return new Fixtures();\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** yawp.fixtures.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 128002c2af748d0f6f19\n **/","import request from './request';\n\nvar fixtures = require('./../commons/fixtures')(request);\nyawp.fixtures = fixtures;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/web/yawp.fixtures.js\n **/","import { extend, toUrlParam } from '../commons/utils';\n\nexport default function (url, options) {\n    return new Promise((resolve, reject) => {\n        var query = options.query;\n        delete options.query;\n\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            resolveOrReject(request, options, resolve, reject);\n        };\n\n        request.open(options.method, url + (query ? '?' + toUrlParam(query) : ''));\n        setHeaders(request, options.headers);\n        request.send(options.body);\n    });\n}\n\nfunction resolveOrReject(request, options, resolve, reject) {\n    if (request.readyState === 4) {\n        if (request.status === 200) {\n            resolve(options.json ? JSON.parse(request.responseText) : request.responseText);\n        } else {\n            reject(request);\n        }\n    }\n}\n\nfunction setHeaders(request, headers) {\n    headers = headers || {};\n    extend(headers, {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8',\n    });\n    for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n            request.setRequestHeader(key, headers[key]);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/web/request.js\n **/","export function extend() {\n    var result = arguments[0] || {};\n\n    for (var i = 1, l = arguments.length; i < l; i++) {\n        var obj = arguments[i];\n        for (var attrname in obj) {\n            result[attrname] = obj[attrname];\n        }\n    }\n\n    return result;\n}\n\nexport function toUrlParam(jsonParams) {\n    return Object.keys(jsonParams).map(function (k) {\n        return encodeURIComponent(k) + '=' + encodeURIComponent(jsonParams[k]);\n    }).join('&');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/commons/utils.js\n **/","import { extend } from './utils';\n\nconst DEFAULT_BASE_URL = '/fixtures';\nconst DEFAULT_RESET_URL = '/_ah/yawp/datastore/delete_all';\nconst DEFAULT_LAZY_PROPERTIES = ['id']; // needed till harmony proxies\n\nexport default (request) => {\n\n    class Fixtures {\n        constructor() {\n            this._baseUrl = DEFAULT_BASE_URL;\n            this._resetUrl = DEFAULT_RESET_URL;\n            this._lazyProperties = DEFAULT_LAZY_PROPERTIES;\n            this.promise = null;\n            this.fixtures = [];\n            this.lazy = {};\n        }\n\n        config(callback) {\n            callback(this);\n        }\n\n        baseUrl(url) {\n            this._baseUrl = url;\n        }\n\n        resetUrl(url) {\n            this._resetUrl = url;\n        }\n\n        lazyProperties(properties) {\n            this._lazyProperties = properties;\n        }\n\n        reset(all) {\n            return request(this._resetUrl, {\n                method: 'GET'\n            }).then(() => {\n                this.clear(all);\n            });\n        }\n\n        clear(all) {\n            this.promise = null;\n            for (let {name, path} of this.fixtures) {\n                this.bindFixture(name, path);\n                all && this.bindLazy(name, path);\n            }\n        }\n\n        bind(name, path) {\n            this.fixtures.push({name, path});\n            this.bindFixture(name, path);\n            this.bindLazy(name);\n        }\n\n        bindFixture(name, path) {\n            this[name] = new Fixture(this, name, path).api;\n        }\n\n        bindLazy(name) {\n            this.lazy[name] = new Lazy(this, name).api;\n        }\n\n        chain(promiseFn) {\n            if (!this.promise) {\n                this.promise = promiseFn();\n            } else {\n                this.promise = this.promise.then(promiseFn)\n            }\n            return this.promise;\n        }\n\n        load(callback) {\n            if (!this.promise) {\n                return new Promise(() => callback && callback());\n            }\n            return this.promise.then(() => callback && callback());\n        }\n    }\n\n    class Fixture {\n        constructor(fx, name, path) {\n            this.fx = fx;\n            this.name = name;\n            this.path = path;\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            var api = (key, data) => {\n                return this.fx.chain(this.load(key, data));\n            };\n            api.self = this;\n            return api;\n        }\n\n        url() {\n            return this.fx._baseUrl + this.path;\n        }\n\n        load(key, data) {\n            this.createStubs(key);\n            return this.createLoadPromiseFn(key, data);\n        }\n\n        createLoadPromiseFn(key, data) {\n            if (!data) {\n                data = this.getLazyDataFor(key);\n            }\n\n            return () => {\n                if (this.isLoaded(key)) {\n                    return this.api[key];\n                }\n\n                return this.prepare(data).then((object) => {\n                    return request(this.url(), {\n                        method: 'POST',\n                        json: true,\n                        body: JSON.stringify(object)\n                    }).then((response) => {\n                        this.api[key] = response;\n                        return response;\n\n                    })\n                });\n            }\n        }\n\n        getLazyDataFor(key) {\n            var lazy = this.fx.lazy[this.name].self;\n            return lazy.getData(key);\n        }\n\n        prepare(data) {\n            return new Promise((resolve) => {\n                let object = {};\n                extend(object, data);\n\n                let lazyProperties = [];\n                this.inspectLazyProperties(object, lazyProperties);\n                this.resolveLazyProperties(object, lazyProperties, resolve);\n            });\n        }\n\n        resolveLazyProperties(object, lazyProperties, resolve) {\n            if (!lazyProperties.length) {\n                resolve(object);\n            } else {\n                var promise = lazyProperties[0]();\n                for (var i = 1, l = lazyProperties.length; i < l; i++) {\n                    promise = promise.then(lazyProperties[i]);\n                }\n\n                promise.then(() => {\n                    resolve(object);\n                });\n            }\n        }\n\n        inspectLazyProperties(object, lazyProperties) {\n            for (let key of Object.keys(object)) {\n                let value = object[key];\n                if (value instanceof Function) {\n                    lazyProperties.push(() => {\n                        return value().then((actualValue) => {\n                            object[key] = actualValue;\n                        });\n                    });\n                    continue;\n                }\n                if (value instanceof Object) {\n                    this.inspectLazyProperties(value, lazyProperties);\n                    return;\n                }\n            }\n        }\n\n        createStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            let self = this;\n            this.api[key] = this.fx._lazyProperties.reduce((map, property) => {\n                map[property] = () => {\n                    return new Promise((resolve) => resolve(self.api[key][property]));\n                }\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        isLoaded(key) {\n            return this.api[key] && !this.hasStubs(key);\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n    }\n\n    class Lazy {\n        constructor(fx, name) {\n            this.fx = fx;\n            this.name = name;\n            this.data = {};\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            let api = (key, data) => {\n                this.createLazyStubs(key);\n                this.data[key] = data;\n            };\n            api.self = this;\n            return api;\n        }\n\n        getData(key) {\n            return this.data[key];\n        }\n\n        createLazyStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            this.api[key] = this.fx._lazyProperties.reduce((map, property) => {\n                map[property] = () => {\n                    return this.getFixtureRef().load(key)().then((object) => object[property]);\n                };\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n\n        getFixtureRef() {\n            return this.fx[this.name].self;\n        }\n    }\n\n    return new Fixtures();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/commons/fixtures.js\n **/"],"sourceRoot":""}