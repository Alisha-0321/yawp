{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///yawp.min.js","webpack:///webpack/bootstrap fb9ed23521c83b22f287","webpack:///./src/web/index.js","webpack:///./src/web/request.js","webpack:///./src/commons/utils.js","webpack:///./src/commons/yawp.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_request","_request2","yawp","resolveOrReject","request","options","resolve","reject","readyState","status","json","JSON","parse","responseText","setHeaders","headers","_utils","extend","Accept","Content-Type","key","hasOwnProperty","setRequestHeader","url","Promise","query","XMLHttpRequest","onreadystatechange","open","method","toUrlParam","send","body","result","arguments","i","l","length","attrname","jsonParams","keys","map","k","encodeURIComponent","join","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","normalize","arg","extractId","hasId","object","_get","get","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_baseUrl","_defaultFetchOptions","yawpFn","baseArg","q","Yawp","cb","promise","createOrUpdate","then","_this","update","destroy","action","put","_patch","post","_delete","_options","clear","type","prepareRequestOptions","objects","_this2","wrapInstance","parentBaseArg","parentBase","t","param","data","where","slice","order","sort","limit","_this3","baseRequest","stringify","_this4","setupQuery","wrapArray","list","_params","verb","path","constructorFn","base","sub","_base","_this5","bindBaseMethods","apply","getOwnPropertyNames","bind","config","baseUrl","defaultFetchOptions","patch","baseApi"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,UAAAH,GACA,gBAAAC,SACAA,QAAA,KAAAD,IAEAD,EAAA,KAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YAUA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GE3DV,IAAAC,GAAAhB,EAAA,GFgEKiB,EAAYR,EAAuBO,GE9DpCE,EAAOlB,EAAQ,GAARiB,aFoEVvB,cElEcwB,EFmEdvB,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASM,GAE/B,YG1DD,SAASmB,GAAgBC,EAASC,EAASC,EAASC,GACrB,IAAvBH,EAAQI,aACe,MAAnBJ,EAAQK,OACRH,EAAQD,EAAQK,KAAOC,KAAKC,MAAMR,EAAQS,cAAgBT,EAAQS,cAElEN,EAAOH,IAKnB,QAASU,GAAWV,EAASW,GACzBA,EAAUA,OACV,EAAAC,EAAAC,QAAOF,GACHG,OAAU,mBACVC,eAAgB,kCAEpB,KAAK,GAAIC,KAAOL,GACRA,EAAQM,eAAeD,IACvBhB,EAAQkB,iBAAiBF,EAAKL,EAAQK,IH0CjDvB,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IAGXrB,aGjFc,SAAU6C,EAAKlB,GAC1B,MAAO,IAAImB,SAAQ,SAAClB,EAASC,GACzB,GAAIkB,GAAQpB,EAAQoB,YACbpB,GAAQoB,KAEf,IAAIrB,GAAU,GAAIsB,eAElBtB,GAAQuB,mBAAqB,WACzBxB,EAAgBC,EAASC,EAASC,EAASC,IAG/CH,EAAQwB,KAAKvB,EAAQwB,OAAQN,GAAOE,EAAQ,KAAM,EAAAT,EAAAc,YAAWL,GAAS,KACtEX,EAAWV,EAASC,EAAQU,SAC5BX,EAAQ2B,KAAK1B,EAAQ2B,QAf7B,IAAAhB,GAAAhC,EAAA,EH4HCL,GAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,GAEtB,YIlIM,SAASuC,KAGZ,IAAK,GAFDgB,GAASC,UAAU,OAEdC,EAAI,EAAGC,EAAIF,UAAUG,OAAQF,EAAIC,EAAGD,IAAK,CAC9C,GAAIzC,GAAMwC,UAAUC,EACpB,KAAK,GAAIG,KAAY5C,GACjBuC,EAAOK,GAAY5C,EAAI4C,GAI/B,MAAOL,GAGJ,QAASH,GAAWS,GACvB,MAAO1C,QAAO2C,KAAKD,GAAYE,IAAI,SAAUC,GACzC,MAAOC,oBAAmBD,GAAK,IAAMC,mBAAmBJ,EAAWG,MACpEE,KAAK,KJoHX/C,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IAEXrB,EIvIeuC,SJwIfvC,EI3HeoD,cJiJV,SAASnD,EAAQD,EAASM,GAE/B,YAYA,SAAS6D,GAA2BC,EAAMzD,GAAQ,IAAKyD,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO1D,GAAyB,gBAATA,IAAqC,kBAATA,GAA8ByD,EAAPzD,EAElO,QAAS2D,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIC,WAAU,iEAAoED,GAAeD,GAASG,UAAYvD,OAAOwD,OAAOH,GAAcA,EAAWE,WAAaE,aAAevD,MAAOkD,EAAUM,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeP,IAAYrD,OAAO6D,eAAiB7D,OAAO6D,eAAeT,EAAUC,GAAcD,EAASU,UAAYT,GAEje,QAASU,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIX,WAAU,qCK3KjH,QAASY,GAAUC,GACf,MAAKA,GAGDA,YAAenE,QACRoE,EAAUD,GAEdA,EALI,GAQf,QAASE,GAAMC,GACX,MAAOA,GAAOhF,GAGlB,QAAS8E,GAAUE,GACf,GAAID,EAAMC,GACN,MAAOA,GAAOhF,EAElB,MAAM,oEL2ITU,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIqE,GAAO,QAASC,GAAIF,EAAQG,EAAUC,GAA2B,OAAXJ,IAAiBA,EAASK,SAASpB,UAAW,IAAIqB,GAAO5E,OAAO6E,yBAAyBP,EAAQG,EAAW,IAAaK,SAATF,EAAoB,CAAE,GAAIG,GAAS/E,OAAOgF,eAAeV,EAAS,OAAe,QAAXS,EAAmB,OAAkCP,EAAIO,EAAQN,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAK1E,KAAgB,IAAI+E,GAASL,EAAKJ,GAAK,IAAeM,SAAXG,EAA4C,MAAOA,GAAOzF,KAAKkF,IAExdQ,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI/C,GAAI,EAAGA,EAAI+C,EAAM7C,OAAQF,IAAK,CAAE,GAAIgD,GAAaD,EAAM/C,EAAIgD,GAAW5B,WAAa4B,EAAW5B,aAAc,EAAO4B,EAAW1B,cAAe,EAAU,SAAW0B,KAAYA,EAAW3B,UAAW,GAAM3D,OAAOC,eAAemF,EAAQE,EAAW/D,IAAK+D,IAAiB,MAAO,UAAUrB,EAAasB,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBlB,EAAYV,UAAWgC,GAAiBC,GAAaL,EAAiBlB,EAAauB,GAAqBvB,MKxKjiB9C,EAAAhC,EAAA,GAEIsG,EAAU,OACVC,ILuMH7G,cKhLc,SAAC0B,GAEZ,QAASoF,GAAOC,GAEZ,GAAIpF,MACAqF,KAEEC,EALe,WAOjB,QAAAA,GAAYT,GAAOtB,EAAA9E,KAAA6G,GACXT,IACA,EAAAlE,EAAAC,QAAOnC,KAAMoG,GATJ,MAAAH,GAAAY,IAAAvE,IAAA,OAAArB,MAAA,SA+OZ6F,GACD,GAAIC,GAAU/G,KAAKgH,gBACnB,OAAOF,GAAKC,EAAQE,KAAKH,GAAMC,KAjPlBzE,IAAA,iBAAArB,MAAA,WAoPA,GAAAiG,GAAAlH,KACT+G,EAAA,MAUJ,OATI3B,GAAMpF,OACNuB,EAAQkB,IAAMzC,KAAKK,GACnB0G,EAAUF,EAAKM,OAAOnH,OAEtB+G,EAAUF,EAAKtC,OAAOvE,MAAMiH,KAAK,SAAC5B,GAE9B,MADA6B,GAAK7G,GAAKgF,EAAOhF,GACVgF,IAGR0B,KA/PMzE,IAAA,UAAArB,MAAA,SAkQT6F,GACJvF,EAAQkB,IAAM0C,EAAUnF,KACxB,IAAI+G,GAAUF,EAAKO,SACnB,OAAON,GAAKC,EAAQE,KAAKH,GAAMC,KArQlBzE,IAAA,MAAArB,MAAA,SAwQboG,GAEA,MADA9F,GAAQkB,IAAM0C,EAAUnF,MACjB6G,EAAKtB,IAAI8B,MA1QH/E,IAAA,MAAArB,MAAA,SA6QboG,GAEA,MADA9F,GAAQkB,IAAM0C,EAAUnF,MACjB6G,EAAKS,IAAID,MA/QH/E,IAAA,SAAArB,MAAA,SAkRVoG,GAEH,MADA9F,GAAQkB,IAAM0C,EAAUnF,MACjB6G,EAAKU,OAAOF,MApRN/E,IAAA,OAAArB,MAAA,SAuRZoG,GAED,MADA9F,GAAQkB,IAAM0C,EAAUnF,MACjB6G,EAAKW,KAAKH,MAzRJ/E,IAAA,UAAArB,MAAA,SA4RToG,GAEJ,MADA9F,GAAQkB,IAAM0C,EAAUnF,MACjB6G,EAAKY,QAAQJ,QA9RP/E,IAAA,QAAArB,MAAA,WAgBbM,GACIkB,IAAKwC,EAAU0B,OAjBNrE,IAAA,wBAAArB,MAAA,WAsBb,GAAIyG,IAAW,EAAAxF,EAAAC,WAAWZ,EAE1B,OADAsF,GAAKc,QACED,KAxBMpF,IAAA,cAAArB,MAAA,SA2BE2G,GACf,GAAIrG,GAAUsF,EAAKgB,wBAEfpF,EAAM+D,EAAUjF,EAAQkB,GAS5B,cAROlB,GAAQkB,IAEflB,EAAQwB,OAAS6E,EACjBrG,EAAQK,MAAO,GACf,EAAAM,EAAAC,QAAOZ,EAASkF,GAITnF,EAAQmB,EAAKlB,MAvCPe,IAAA,eAAArB,MAAA,SA0CGoE,GAChB,MAAO,IAAIrF,MAAKqF,MA3CH/C,IAAA,YAAArB,MAAA,SA8CA6G,GAAS,GAAAC,GAAA/H,IACtB,OAAO8H,GAAQnE,IAAI,SAAC0B,GAAD,MAAY0C,GAAKC,aAAa3C,QA/CpC/C,IAAA,OAAArB,MAAA,SAoDLgH,GACR,GAAIC,GAAajD,EAAUgD,EAE3B,OADA1G,GAAQkB,IAAMyF,EAAa3G,EAAQkB,IAC5BzC,QAvDMsC,IAAA,YAAArB,MAAA,SA0DAkH,GAEb,MADAtB,GAAKuB,MAAM,IAAKD,GACTnI,QA5DMsC,IAAA,QAAArB,MAAA,SA+DJoH,GAMT,MALyB,KAArBjF,UAAUG,OACVqD,EAAE0B,MAAQD,EAEVzB,EAAE0B,SAAWC,MAAMhI,KAAK6C,WAErBpD,QArEMsC,IAAA,QAAArB,MAAA,SAwEJoH,GAET,MADAzB,GAAE4B,MAAQH,EACHrI,QA1EMsC,IAAA,OAAArB,MAAA,SA6ELoH,GAER,MADAzB,GAAE6B,KAAOJ,EACFrI,QA/EMsC,IAAA,QAAArB,MAAA,SAkFJoH,GAET,MADAzB,GAAE8B,MAAQL,EACHrI,QApFMsC,IAAA,QAAArB,MAAA,SAuFJiE,GAAK,GAAAyD,GAAA3I,KACV8G,EAAoB,kBAAR5B,GAAqBA,EAAMW,MAEvCX,KAAQ4B,IACRvF,EAAQkB,KAAO,IAAMyC,EAGzB,IAAI6B,GAAUF,EAAK+B,YAAY,OAAO3B,KAAK,SAAC5B,GACxC,MAAOsD,GAAKX,aAAa3C,IAG7B,OAAIyB,GACOC,EAAQE,KAAKH,GAGjBC,KAtGMzE,IAAA,aAAArB,MAAA,WA0GTF,OAAO2C,KAAKkD,GAAGrD,OAAS,GACxBsD,EAAKuB,MAAM,IAAKvG,KAAKgH,UAAUjC,OA3GtBtE,IAAA,OAAArB,MAAA,SA+GL6F,GAAI,GAAAgC,GAAA9I,IACZ6G,GAAKkC,YAEL,IAAIhC,GAAUF,EAAK+B,YAAY,OAAO3B,KAAK,SAACa,GACxC,MAAOgB,GAAKE,UAAUlB,IAG1B,OAAIhB,GACOC,EAAQE,KAAKH,GAEjBC,KAzHMzE,IAAA,QAAArB,MAAA,SA4HJ6F,GAGT,MAFAD,GAAK6B,MAAM,GAEJ7B,EAAKoC,KAAK,SAACnB,GACd,GAAIzC,GAA4B,IAAnByC,EAAQvE,OAAe,KAAOuE,EAAQ,EACnD,OAAOhB,GAAKA,EAAGzB,GAAUA,OAjIhB/C,IAAA,OAAArB,MAAA,SAqIL6F,GACR,MAAOD,GAAKoC,KAAK,SAACnB,GACd,GAAuB,IAAnBA,EAAQvE,OACR,KAAM,uBAAyBuE,EAAQvE,OAAS,UAEpD,IAAI8B,GAASyC,EAAQ,EACrB,OAAOhB,GAAKA,EAAGzB,GAAUA,OA3IhB/C,IAAA,SAAArB,MAAA,SAiJHoE,GAEV,MADA9D,GAAQ2B,KAAOrB,KAAKgH,UAAUxD,GACvBwB,EAAK+B,YAAY,WAnJXtG,IAAA,SAAArB,MAAA,SAsJHoE,GAEV,MADA9D,GAAQ2B,KAAOrB,KAAKgH,UAAUxD,GACvBwB,EAAK+B,YAAY,UAxJXtG,IAAA,QAAArB,MAAA,SA2JJoE,GAET,MADA9D,GAAQ2B,KAAOrB,KAAKgH,UAAUxD,GACvBwB,EAAK+B,YAAY,YA7JXtG,IAAA,UAAArB,MAAA,WAiKb,MAAO4F,GAAK+B,YAAY,aAjKXtG,IAAA,OAAArB,MAAA,SAsKLoE,GAER,MADA9D,GAAQ2B,KAAOrB,KAAKgH,UAAUxD,GACvBrF,QAxKMsC,IAAA,SAAArB,MAAA,SA2KHiI,GAEV,MADA3H,GAAQoB,OAAQ,EAAAT,EAAAC,QAAOZ,EAAQoB,MAAOuG,GAC/BlJ,QA7KMsC,IAAA,QAAArB,MAAA,SAgLJqB,EAAKrB,GACTM,EAAQoB,QACTpB,EAAQoB,UAEZpB,EAAQoB,MAAML,GAAOrB,KApLRqB,IAAA,SAAArB,MAAA,SAuLHkI,EAAMC,GAEhB,MADA7H,GAAQkB,KAAO,IAAM2G,EACdvC,EAAK+B,YAAYO,MAzLX7G,IAAA,MAAArB,MAAA,SA4LNoG,GACP,MAAOR,GAAKQ,OAAO,MAAOA,MA7Lb/E,IAAA,MAAArB,MAAA,SAgMNoG,GACP,MAAOR,GAAKQ,OAAO,MAAOA,MAjMb/E,IAAA,SAAArB,MAAA,SAoMHoG,GACV,MAAOR,GAAKQ,OAAO,QAASA,MArMf/E,IAAA,OAAArB,MAAA,SAwMLoG,GACR,MAAOR,GAAKQ,OAAO,OAAQA,MAzMd/E,IAAA,UAAArB,MAAA,SA4MFoG,GACX,MAAOR,GAAKQ,OAAO,SAAUA,MA7MhB/E,IAAA,WAAArB,MAAA,SAkNDoI,GACZ,GAAIC,GAAO5C,EAAOC,GACd4C,EAAA,SAAAC,GACA,QAAAD,KAAczE,EAAA9E,KAAAuJ,EAAA,IAAAE,GAAA1F,EAAA/D,KAAAe,OAAAgF,eAAAwD,GAAAhJ,KAAAP,MAAA,OAEV6G,GAAK6C,gBAALD,EAA2BH,GACvBD,EACAA,EAAcM,MAAdF,EAA0BrG,WAE1BkC,EAAAvE,OAAAgF,eAAAwD,EAAAjF,WAAA,cAAAmF,GAAkBE,MAAlBF,EAA8BrG,WANxBqG,EADd,MAAAvF,GAAAqF,EAAAC,GAAAD,GAAoBD,EAYxB,OADAC,YAAYD,EACLC,KAhOMjH,IAAA,kBAAArB,MAAA,SAmOM+C,EAAMsF,GACzBtF,WAAa,YAGb,KAAK,GADDN,GAAO3C,OAAO6I,oBAAoBN,EAAKhF,WAClCjB,EAAI,EAAGC,EAAII,EAAKH,OAAQF,EAAIC,EAAGD,IAAK,CACzC,GAAIf,GAAMoB,EAAKL,EACfW,YAAW1B,GAAOgH,EAAKhF,UAAUhC,GAAKuH,KAAK7F,QAzOlC6C,IAmSrB,OADAA,GAAKc,QACEd,EAKX,QAASiD,GAAOhD,GACZ,GAAIrG,IACAsJ,QAAS,SAACtH,GACN+D,EAAU/D,GAEduH,oBAAqB,SAACzI,GAClBkF,EAAsBlF,GAG9BuF,GAAGrG,GAGP,QAAS0G,GAAO9B,GACZ,GAAIhF,GAAK8E,EAAUE,EACnB,OAAOqB,GAAOrG,GAAI8G,OAAO9B,GAG7B,QAAS4E,GAAM5E,GACX,GAAIhF,GAAK8E,EAAUE,EACnB,OAAOqB,GAAOrG,GAAI4J,MAAM5E,GAG5B,QAAS+B,GAAQ/B,GACb,GAAIhF,GAAK8E,EAAUE,EACnB,OAAOqB,GAAOrG,GAAI+G,QAAQ/B,GAG9B,GAAI6E,IACAJ,SACA3C,SACA8C,QACA7C,UAGJ,QAAO,EAAAlF,EAAAC,QAAOuE,EAAQwD,ILsPzBrK,EAAOD,QAAUA,EAAQ","file":"yawp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yawp\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yawp\"] = factory();\n\telse\n\t\troot[\"yawp\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yawp\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yawp\"] = factory();\n\telse\n\t\troot[\"yawp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _request = __webpack_require__(1);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar yawp = __webpack_require__(3)(_request2.default);\n\t\n\texports.default = yawp;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (url, options) {\n\t    return new Promise(function (resolve, reject) {\n\t        var query = options.query;\n\t        delete options.query;\n\t\n\t        var request = new XMLHttpRequest();\n\t\n\t        request.onreadystatechange = function () {\n\t            resolveOrReject(request, options, resolve, reject);\n\t        };\n\t\n\t        request.open(options.method, url + (query ? '?' + (0, _utils.toUrlParam)(query) : ''));\n\t        setHeaders(request, options.headers);\n\t        request.send(options.body);\n\t    });\n\t};\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tfunction resolveOrReject(request, options, resolve, reject) {\n\t    if (request.readyState === 4) {\n\t        if (request.status === 200) {\n\t            resolve(options.json ? JSON.parse(request.responseText) : request.responseText);\n\t        } else {\n\t            reject(request);\n\t        }\n\t    }\n\t}\n\t\n\tfunction setHeaders(request, headers) {\n\t    headers = headers || {};\n\t    (0, _utils.extend)(headers, {\n\t        'Accept': 'application/json',\n\t        'Content-Type': 'application/json;charset=UTF-8'\n\t    });\n\t    for (var key in headers) {\n\t        if (headers.hasOwnProperty(key)) {\n\t            request.setRequestHeader(key, headers[key]);\n\t        }\n\t    }\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.extend = extend;\n\texports.toUrlParam = toUrlParam;\n\tfunction extend() {\n\t    var result = arguments[0] || {};\n\t\n\t    for (var i = 1, l = arguments.length; i < l; i++) {\n\t        var obj = arguments[i];\n\t        for (var attrname in obj) {\n\t            result[attrname] = obj[attrname];\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction toUrlParam(jsonParams) {\n\t    return Object.keys(jsonParams).map(function (k) {\n\t        return encodeURIComponent(k) + '=' + encodeURIComponent(jsonParams[k]);\n\t    }).join('&');\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _baseUrl = '/api';\n\tvar _defaultFetchOptions = {};\n\t\n\tfunction normalize(arg) {\n\t    if (!arg) {\n\t        return '';\n\t    }\n\t    if (arg instanceof Object) {\n\t        return extractId(arg);\n\t    }\n\t    return arg;\n\t}\n\t\n\tfunction hasId(object) {\n\t    return object.id;\n\t}\n\t\n\tfunction extractId(object) {\n\t    if (hasId(object)) {\n\t        return object.id;\n\t    }\n\t    throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n\t}\n\t\n\texports.default = function (request) {\n\t\n\t    function yawpFn(baseArg) {\n\t\n\t        var options = {};\n\t        var q = {};\n\t\n\t        var Yawp = function () {\n\t            function Yawp(props) {\n\t                _classCallCheck(this, Yawp);\n\t\n\t                if (props) {\n\t                    (0, _utils.extend)(this, props);\n\t                }\n\t            }\n\t\n\t            // request\n\t\n\t            _createClass(Yawp, [{\n\t                key: 'save',\n\t\n\t\n\t                // instance method\n\t\n\t                value: function save(cb) {\n\t                    var promise = this.createOrUpdate();\n\t                    return cb ? promise.then(cb) : promise;\n\t                }\n\t            }, {\n\t                key: 'createOrUpdate',\n\t                value: function createOrUpdate() {\n\t                    var _this = this;\n\t\n\t                    var promise = void 0;\n\t                    if (hasId(this)) {\n\t                        options.url = this.id;\n\t                        promise = Yawp.update(this);\n\t                    } else {\n\t                        promise = Yawp.create(this).then(function (object) {\n\t                            _this.id = object.id;\n\t                            return object;\n\t                        });\n\t                    }\n\t                    return promise;\n\t                }\n\t            }, {\n\t                key: 'destroy',\n\t                value: function destroy(cb) {\n\t                    options.url = extractId(this);\n\t                    var promise = Yawp.destroy();\n\t                    return cb ? promise.then(cb) : promise;\n\t                }\n\t            }, {\n\t                key: 'get',\n\t                value: function get(action) {\n\t                    options.url = extractId(this);\n\t                    return Yawp.get(action);\n\t                }\n\t            }, {\n\t                key: 'put',\n\t                value: function put(action) {\n\t                    options.url = extractId(this);\n\t                    return Yawp.put(action);\n\t                }\n\t            }, {\n\t                key: '_patch',\n\t                value: function _patch(action) {\n\t                    options.url = extractId(this);\n\t                    return Yawp._patch(action);\n\t                }\n\t            }, {\n\t                key: 'post',\n\t                value: function post(action) {\n\t                    options.url = extractId(this);\n\t                    return Yawp.post(action);\n\t                }\n\t            }, {\n\t                key: '_delete',\n\t                value: function _delete(action) {\n\t                    options.url = extractId(this);\n\t                    return Yawp._delete(action);\n\t                }\n\t            }], [{\n\t                key: 'clear',\n\t                value: function clear() {\n\t                    options = {\n\t                        url: normalize(baseArg)\n\t                    };\n\t                }\n\t            }, {\n\t                key: 'prepareRequestOptions',\n\t                value: function prepareRequestOptions() {\n\t                    var _options = (0, _utils.extend)({}, options);\n\t                    Yawp.clear();\n\t                    return _options;\n\t                }\n\t            }, {\n\t                key: 'baseRequest',\n\t                value: function baseRequest(type) {\n\t                    var options = Yawp.prepareRequestOptions();\n\t\n\t                    var url = _baseUrl + options.url;\n\t                    delete options.url;\n\t\n\t                    options.method = type;\n\t                    options.json = true;\n\t                    (0, _utils.extend)(options, _defaultFetchOptions);\n\t\n\t                    //console.log('request', url, options);\n\t\n\t                    return request(url, options);\n\t                }\n\t            }, {\n\t                key: 'wrapInstance',\n\t                value: function wrapInstance(object) {\n\t                    return new this(object);\n\t                }\n\t            }, {\n\t                key: 'wrapArray',\n\t                value: function wrapArray(objects) {\n\t                    var _this2 = this;\n\t\n\t                    return objects.map(function (object) {\n\t                        return _this2.wrapInstance(object);\n\t                    });\n\t                }\n\t\n\t                // query\n\t\n\t            }, {\n\t                key: 'from',\n\t                value: function from(parentBaseArg) {\n\t                    var parentBase = normalize(parentBaseArg);\n\t                    options.url = parentBase + options.url;\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'transform',\n\t                value: function transform(t) {\n\t                    Yawp.param('t', t);\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'where',\n\t                value: function where(data) {\n\t                    if (arguments.length === 1) {\n\t                        q.where = data;\n\t                    } else {\n\t                        q.where = [].slice.call(arguments);\n\t                    }\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'order',\n\t                value: function order(data) {\n\t                    q.order = data;\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'sort',\n\t                value: function sort(data) {\n\t                    q.sort = data;\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'limit',\n\t                value: function limit(data) {\n\t                    q.limit = data;\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'fetch',\n\t                value: function fetch(arg) {\n\t                    var _this3 = this;\n\t\n\t                    var cb = typeof arg === 'function' ? arg : undefined;\n\t\n\t                    if (arg && !cb) {\n\t                        options.url += '/' + arg;\n\t                    }\n\t\n\t                    var promise = Yawp.baseRequest('GET').then(function (object) {\n\t                        return _this3.wrapInstance(object);\n\t                    });\n\t\n\t                    if (cb) {\n\t                        return promise.then(cb);\n\t                    }\n\t\n\t                    return promise;\n\t                }\n\t            }, {\n\t                key: 'setupQuery',\n\t                value: function setupQuery() {\n\t                    if (Object.keys(q).length > 0) {\n\t                        Yawp.param('q', JSON.stringify(q));\n\t                    }\n\t                }\n\t            }, {\n\t                key: 'list',\n\t                value: function list(cb) {\n\t                    var _this4 = this;\n\t\n\t                    Yawp.setupQuery();\n\t\n\t                    var promise = Yawp.baseRequest('GET').then(function (objects) {\n\t                        return _this4.wrapArray(objects);\n\t                    });\n\t\n\t                    if (cb) {\n\t                        return promise.then(cb);\n\t                    }\n\t                    return promise;\n\t                }\n\t            }, {\n\t                key: 'first',\n\t                value: function first(cb) {\n\t                    Yawp.limit(1);\n\t\n\t                    return Yawp.list(function (objects) {\n\t                        var object = objects.length === 0 ? null : objects[0];\n\t                        return cb ? cb(object) : object;\n\t                    });\n\t                }\n\t            }, {\n\t                key: 'only',\n\t                value: function only(cb) {\n\t                    return Yawp.list(function (objects) {\n\t                        if (objects.length !== 1) {\n\t                            throw 'called only but got ' + objects.length + ' results';\n\t                        }\n\t                        var object = objects[0];\n\t                        return cb ? cb(object) : object;\n\t                    });\n\t                }\n\t\n\t                // repository\n\t\n\t            }, {\n\t                key: 'create',\n\t                value: function create(object) {\n\t                    options.body = JSON.stringify(object);\n\t                    return Yawp.baseRequest('POST');\n\t                }\n\t            }, {\n\t                key: 'update',\n\t                value: function update(object) {\n\t                    options.body = JSON.stringify(object);\n\t                    return Yawp.baseRequest('PUT');\n\t                }\n\t            }, {\n\t                key: 'patch',\n\t                value: function patch(object) {\n\t                    options.body = JSON.stringify(object);\n\t                    return Yawp.baseRequest('PATCH');\n\t                }\n\t            }, {\n\t                key: 'destroy',\n\t                value: function destroy() {\n\t                    return Yawp.baseRequest('DELETE');\n\t                }\n\t\n\t                // actions\n\t\n\t            }, {\n\t                key: 'json',\n\t                value: function json(object) {\n\t                    options.body = JSON.stringify(object);\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'params',\n\t                value: function params(_params) {\n\t                    options.query = (0, _utils.extend)(options.query, _params);\n\t                    return this;\n\t                }\n\t            }, {\n\t                key: 'param',\n\t                value: function param(key, value) {\n\t                    if (!options.query) {\n\t                        options.query = {};\n\t                    }\n\t                    options.query[key] = value;\n\t                }\n\t            }, {\n\t                key: 'action',\n\t                value: function action(verb, path) {\n\t                    options.url += '/' + path;\n\t                    return Yawp.baseRequest(verb);\n\t                }\n\t            }, {\n\t                key: 'get',\n\t                value: function get(action) {\n\t                    return Yawp.action('GET', action);\n\t                }\n\t            }, {\n\t                key: 'put',\n\t                value: function put(action) {\n\t                    return Yawp.action('PUT', action);\n\t                }\n\t            }, {\n\t                key: '_patch',\n\t                value: function _patch(action) {\n\t                    return Yawp.action('PATCH', action);\n\t                }\n\t            }, {\n\t                key: 'post',\n\t                value: function post(action) {\n\t                    return Yawp.action('POST', action);\n\t                }\n\t            }, {\n\t                key: '_delete',\n\t                value: function _delete(action) {\n\t                    return Yawp.action('DELETE', action);\n\t                }\n\t\n\t                // es5 subclassing\n\t\n\t            }, {\n\t                key: 'subclass',\n\t                value: function subclass(constructorFn) {\n\t                    var base = yawpFn(baseArg);\n\t                    var sub = function (_base) {\n\t                        _inherits(sub, _base);\n\t\n\t                        function sub() {\n\t                            _classCallCheck(this, sub);\n\t\n\t                            var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(sub).call(this));\n\t\n\t                            Yawp.bindBaseMethods(_this5, base);\n\t                            if (constructorFn) {\n\t                                constructorFn.apply(_this5, arguments);\n\t                            } else {\n\t                                _get(Object.getPrototypeOf(sub.prototype), 'constructor', _this5).apply(_this5, arguments);\n\t                            }\n\t                            return _this5;\n\t                        }\n\t\n\t                        return sub;\n\t                    }(base);\n\t                    sub.super = base;\n\t                    return sub;\n\t                }\n\t            }, {\n\t                key: 'bindBaseMethods',\n\t                value: function bindBaseMethods(self, base) {\n\t                    self.super = function () {};\n\t                    var keys = Object.getOwnPropertyNames(base.prototype);\n\t                    for (var i = 0, l = keys.length; i < l; i++) {\n\t                        var key = keys[i];\n\t                        self.super[key] = base.prototype[key].bind(self);\n\t                    }\n\t                }\n\t            }]);\n\t\n\t            return Yawp;\n\t        }();\n\t\n\t        Yawp.clear();\n\t        return Yawp;\n\t    }\n\t\n\t    // base api\n\t\n\t    function config(cb) {\n\t        var c = {\n\t            baseUrl: function baseUrl(url) {\n\t                _baseUrl = url;\n\t            },\n\t            defaultFetchOptions: function defaultFetchOptions(options) {\n\t                _defaultFetchOptions = options;\n\t            }\n\t        };\n\t        cb(c);\n\t    };\n\t\n\t    function update(object) {\n\t        var id = extractId(object);\n\t        return yawpFn(id).update(object);\n\t    }\n\t\n\t    function patch(object) {\n\t        var id = extractId(object);\n\t        return yawpFn(id).patch(object);\n\t    }\n\t\n\t    function destroy(object) {\n\t        var id = extractId(object);\n\t        return yawpFn(id).destroy(object);\n\t    }\n\t\n\t    var baseApi = {\n\t        config: config,\n\t        update: update,\n\t        patch: patch,\n\t        destroy: destroy\n\t    };\n\t\n\t    return (0, _utils.extend)(yawpFn, baseApi);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** yawp.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fb9ed23521c83b22f287\n **/","import request from './request';\n\nvar yawp = require('./../commons/yawp')(request);\n\nexport default yawp;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/web/index.js\n **/","import { extend, toUrlParam } from '../commons/utils';\n\nexport default function (url, options) {\n    return new Promise((resolve, reject) => {\n        var query = options.query;\n        delete options.query;\n\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            resolveOrReject(request, options, resolve, reject);\n        };\n\n        request.open(options.method, url + (query ? '?' + toUrlParam(query) : ''));\n        setHeaders(request, options.headers);\n        request.send(options.body);\n    });\n}\n\nfunction resolveOrReject(request, options, resolve, reject) {\n    if (request.readyState === 4) {\n        if (request.status === 200) {\n            resolve(options.json ? JSON.parse(request.responseText) : request.responseText);\n        } else {\n            reject(request);\n        }\n    }\n}\n\nfunction setHeaders(request, headers) {\n    headers = headers || {};\n    extend(headers, {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8',\n    });\n    for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n            request.setRequestHeader(key, headers[key]);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/web/request.js\n **/","export function extend() {\n    var result = arguments[0] || {};\n\n    for (var i = 1, l = arguments.length; i < l; i++) {\n        var obj = arguments[i];\n        for (var attrname in obj) {\n            result[attrname] = obj[attrname];\n        }\n    }\n\n    return result;\n}\n\nexport function toUrlParam(jsonParams) {\n    return Object.keys(jsonParams).map(function (k) {\n        return encodeURIComponent(k) + '=' + encodeURIComponent(jsonParams[k]);\n    }).join('&');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/commons/utils.js\n **/","import { extend } from './utils';\n\nlet baseUrl = '/api';\nlet defaultFetchOptions = {};\n\nfunction normalize(arg) {\n    if (!arg) {\n        return '';\n    }\n    if (arg instanceof Object) {\n        return extractId(arg);\n    }\n    return arg;\n}\n\nfunction hasId(object) {\n    return object.id;\n}\n\nfunction extractId(object) {\n    if (hasId(object)) {\n        return object.id;\n    }\n    throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n}\n\nexport default (request) => {\n\n    function yawpFn(baseArg) {\n\n        let options = {};\n        let q = {};\n\n        class Yawp {\n\n            constructor(props) {\n                if (props) {\n                    extend(this, props);\n                }\n            }\n\n            // request\n\n            static clear() {\n                options = {\n                    url: normalize(baseArg)\n                };\n            }\n\n            static prepareRequestOptions() {\n                let _options = extend({}, options);\n                Yawp.clear();\n                return _options;\n            }\n\n            static baseRequest(type) {\n                let options = Yawp.prepareRequestOptions();\n\n                let url = baseUrl + options.url;\n                delete options.url;\n\n                options.method = type;\n                options.json = true;\n                extend(options, defaultFetchOptions);\n\n                //console.log('request', url, options);\n\n                return request(url, options);\n            }\n\n            static wrapInstance(object) {\n                return new this(object);\n            }\n\n            static wrapArray(objects) {\n                return objects.map((object) => this.wrapInstance(object));\n            }\n\n            // query\n\n            static from(parentBaseArg) {\n                let parentBase = normalize(parentBaseArg);\n                options.url = parentBase + options.url;\n                return this;\n            }\n\n            static transform(t) {\n                Yawp.param('t', t);\n                return this;\n            }\n\n            static where(data) {\n                if (arguments.length === 1) {\n                    q.where = data;\n                } else {\n                    q.where = [].slice.call(arguments);\n                }\n                return this;\n            }\n\n            static order(data) {\n                q.order = data;\n                return this;\n            }\n\n            static sort(data) {\n                q.sort = data;\n                return this;\n            }\n\n            static limit(data) {\n                q.limit = data;\n                return this;\n            }\n\n            static fetch(arg) {\n                let cb = typeof arg === 'function' ? arg : undefined;\n\n                if (arg && !cb) {\n                    options.url += '/' + arg;\n                }\n\n                let promise = Yawp.baseRequest('GET').then((object) => {\n                    return this.wrapInstance(object);\n                });\n\n                if (cb) {\n                    return promise.then(cb);\n                }\n\n                return promise;\n            }\n\n            static setupQuery() {\n                if (Object.keys(q).length > 0) {\n                    Yawp.param('q', JSON.stringify(q));\n                }\n            }\n\n            static list(cb) {\n                Yawp.setupQuery();\n\n                let promise = Yawp.baseRequest('GET').then((objects) => {\n                    return this.wrapArray(objects);\n                });\n\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n\n            static first(cb) {\n                Yawp.limit(1);\n\n                return Yawp.list((objects) => {\n                    let object = objects.length === 0 ? null : objects[0];\n                    return cb ? cb(object) : object;\n                });\n            }\n\n            static only(cb) {\n                return Yawp.list((objects) => {\n                    if (objects.length !== 1) {\n                        throw 'called only but got ' + objects.length + ' results';\n                    }\n                    let object = objects[0];\n                    return cb ? cb(object) : object;\n                });\n            }\n\n            // repository\n\n            static create(object) {\n                options.body = JSON.stringify(object);\n                return Yawp.baseRequest('POST');\n            }\n\n            static update(object) {\n                options.body = JSON.stringify(object);\n                return Yawp.baseRequest('PUT');\n            }\n\n            static patch(object) {\n                options.body = JSON.stringify(object);\n                return Yawp.baseRequest('PATCH');\n            }\n\n            static destroy() {\n                return Yawp.baseRequest('DELETE');\n            }\n\n            // actions\n\n            static json(object) {\n                options.body = JSON.stringify(object);\n                return this;\n            }\n\n            static params(params) {\n                options.query = extend(options.query, params);\n                return this;\n            }\n\n            static param(key, value) {\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[key] = value;\n            }\n\n            static action(verb, path) {\n                options.url += '/' + path;\n                return Yawp.baseRequest(verb);\n            }\n\n            static get(action) {\n                return Yawp.action('GET', action);\n            }\n\n            static put(action) {\n                return Yawp.action('PUT', action);\n            }\n\n            static _patch(action) {\n                return Yawp.action('PATCH', action);\n            }\n\n            static post(action) {\n                return Yawp.action('POST', action);\n            }\n\n            static _delete(action) {\n                return Yawp.action('DELETE', action);\n            }\n\n            // es5 subclassing\n\n            static subclass(constructorFn) {\n                let base = yawpFn(baseArg);\n                let sub = class extends base {\n                    constructor() {\n                        super();\n                        Yawp.bindBaseMethods(this, base);\n                        if (constructorFn) {\n                            constructorFn.apply(this, arguments);\n                        } else {\n                            super.constructor.apply(this, arguments);\n                        }\n                    }\n                };\n                sub.super = base;\n                return sub;\n            }\n\n            static bindBaseMethods(self, base) {\n                self.super = () => {\n                };\n                var keys = Object.getOwnPropertyNames(base.prototype);\n                for (let i = 0, l = keys.length; i < l; i++) {\n                    let key = keys[i];\n                    self.super[key] = base.prototype[key].bind(self);\n                }\n            }\n\n            // instance method\n\n            save(cb) {\n                let promise = this.createOrUpdate();\n                return cb ? promise.then(cb) : promise;\n            }\n\n            createOrUpdate() {\n                let promise;\n                if (hasId(this)) {\n                    options.url = this.id;\n                    promise = Yawp.update(this);\n                } else {\n                    promise = Yawp.create(this).then((object) => {\n                        this.id = object.id;\n                        return object;\n                    });\n                }\n                return promise;\n            }\n\n            destroy(cb) {\n                options.url = extractId(this);\n                let promise = Yawp.destroy();\n                return cb ? promise.then(cb) : promise;\n            }\n\n            get(action) {\n                options.url = extractId(this);\n                return Yawp.get(action);\n            }\n\n            put(action) {\n                options.url = extractId(this);\n                return Yawp.put(action);\n            }\n\n            _patch(action) {\n                options.url = extractId(this);\n                return Yawp._patch(action);\n            }\n\n            post(action) {\n                options.url = extractId(this);\n                return Yawp.post(action);\n            }\n\n            _delete(action) {\n                options.url = extractId(this);\n                return Yawp._delete(action);\n            }\n        }\n\n        Yawp.clear();\n        return Yawp;\n    }\n\n    // base api\n\n    function config(cb) {\n        let c = {\n            baseUrl: (url) => {\n                baseUrl = url;\n            },\n            defaultFetchOptions: (options) => {\n                defaultFetchOptions = options;\n            }\n        };\n        cb(c);\n    };\n\n    function update(object) {\n        let id = extractId(object);\n        return yawpFn(id).update(object);\n    }\n\n    function patch(object) {\n        let id = extractId(object);\n        return yawpFn(id).patch(object);\n    }\n\n    function destroy(object) {\n        let id = extractId(object);\n        return yawpFn(id).destroy(object);\n    }\n\n    let baseApi = {\n        config,\n        update,\n        patch,\n        destroy\n    }\n\n    return extend(yawpFn, baseApi);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/commons/yawp.js\n **/"],"sourceRoot":""}