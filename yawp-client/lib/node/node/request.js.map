{"version":3,"sources":["../../../src/node/request.js"],"names":[],"mappings":";;;;;kBAMwB,O;;AANxB;;AAEA,IAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC;AAC9B,QAAI,QAAQ,QAAQ,YAAR,CAAZ;AACH;;AAEc,SAAS,OAAT,CAAiB,GAAjB,EAAsB,KAAtB,EAA6B,OAA7B,EAAsC;AACjD,WAAQ,QAAQ,MAAM,uBAAW,QAAQ,KAAnB,CAAd,GAA0C,EAAlD;;AAEA,QAAI,CAAC,QAAQ,IAAb,EAAmB;AACf,eAAO,MAAM,GAAN,EAAW,OAAX,CAAP;AACH;;AAED,YAAQ,OAAR,GAAkB,QAAQ,OAAR,IAAmB,EAArC;AACA,uBAAO,QAAQ,OAAf,EAAwB;AACpB,kBAAU,kBADU;AAEpB,wBAAgB;AAFI,KAAxB;;AAKA,WAAO,MAAM,GAAN,EAAW,OAAX,EAAoB,IAApB,CAAyB,UAAC,QAAD;AAAA,eAAc,SAAS,IAAT,EAAd;AAAA,KAAzB,CAAP;AACH","file":"request.js","sourcesContent":["import { extend, toUrlParam } from '../commons/utils';\n\nif (typeof fetch === 'undefined') {\n    var fetch = require('node-fetch');\n}\n\nexport default function request(url, query, options) {\n    url += (query ? '?' + toUrlParam(options.query) : '');\n\n    if (!options.json) {\n        return fetch(url, options);\n    }\n\n    options.headers = options.headers || {};\n    extend(options.headers, {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8',\n    });\n\n    return fetch(url, options).then((response) => response.json());\n}\n"]}