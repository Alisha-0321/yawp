{"version":3,"sources":["../../../src/commons/yawp2.js"],"names":[],"mappings":"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","file":"yawp2.js","sourcesContent":["import { extend } from './utils';\n\nvar baseUrl = '/api';\nvar defaultFetchOptions = {};\n\nfunction normalize(arg) {\n    if (!arg) {\n        return '';\n    }\n    if (arg instanceof Object) {\n        return extractId(arg);\n    }\n    return arg;\n}\n\nfunction extractId(object) {\n    if (object.id) {\n        return object.id;\n    }\n    throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n}\n\nexport default (request) => {\n\n    function yawp(baseArg) {\n\n        var options = {\n            url: normalize(baseArg)\n        };\n\n        var q = {};\n\n        class Yawp {\n\n            constructor(props) {\n                extend(this, props);\n            }\n\n            // base\n\n            static config(callback) {\n                var c = {\n                    baseUrl: (url) => {\n                        baseUrl = url;\n                    },\n                    defaultFetchOptions: (options) => {\n                        defaultFetchOptions = options;\n                    }\n                };\n                callback(c);\n            }\n\n            static baseRequest(type, options) {\n                var url = baseUrl + options.url;\n                var body = options.data;\n                delete options.url;\n                delete options.data;\n\n                options.method = type;\n                options.body = body;\n                options.json = true;\n                extend(options, defaultFetchOptions);\n\n                return request(url, options);\n            }\n\n            // prepare\n\n            static from(parentBaseArg) {\n                var parentBase = normalize(parentBaseArg);\n                options.url = parentBase + options.url;\n                return this;\n            }\n\n            static transform(t) {\n                Yawp.param('t', t);\n                return this;\n            }\n\n            // query\n\n            static where(data) {\n                if (arguments.length === 1) {\n                    q.where = data;\n                } else {\n                    q.where = [].slice.call(arguments);\n                }\n                return this;\n            }\n\n            static order(data) {\n                q.order = data;\n                return this;\n            }\n\n            static sort(data) {\n                q.sort = data;\n                return this;\n            }\n\n            static limit(data) {\n                q.limit = data;\n                return this;\n            }\n\n            static fetch(callback) {\n                return Yawp.baseRequest('GET', options).then(callback);\n            }\n\n            static setupQuery() {\n                if (Object.keys(q).length > 0) {\n                    Yawp.param('q', JSON.stringify(q));\n                }\n            }\n\n            static url(decode) {\n                Yawp.setupQuery();\n                var url = baseUrl + options.url + (options.query ? '?' + toUrlParam(options.query) : '');\n                if (decode) {\n                    return decodeURIComponent(url);\n                }\n                return url;\n            }\n\n            static list(callback) {\n                Yawp.setupQuery();\n                return baseRequest('GET', options).then(callback);\n            }\n\n            static first(callback) {\n                Yawp.limit(1);\n\n                return Yawp.list(function (objects) {\n                    var object = objects.length === 0 ? null : objects[0];\n                    if (callback) {\n                        callback(object);\n                    }\n                });\n            }\n\n            static only(callback) {\n                return list(function (objects) {\n                    if (objects.length !== 1) {\n                        throw 'called only but got ' + objects.length + ' results';\n                    }\n                    if (callback) {\n                        callback(objects[0]);\n                    }\n                });\n            }\n\n            // repository\n\n            static create(object) {\n                options.data = JSON.stringify(object);\n                return Yawp.baseRequest('POST', options);\n            }\n\n            static update(object) {\n                // TODO: deal with id\n                options.data = JSON.stringify(object);\n                return Yawp.baseRequest('PUT', options);\n            }\n\n            static patch(object) {\n                // TODO: deal with id\n                options.data = JSON.stringify(object);\n                return Yawp.baseRequest('PATCH', options);\n            }\n\n            static destroy() {\n                // TODO: deal with id\n                return Yawp.baseRequest('DELETE', options);\n            }\n\n            // actions\n\n            static actionOptions(action) {\n                options.url += '/' + action;\n                return options;\n            }\n\n            static json(object) {\n                options.data = JSON.stringify(object);\n                return this;\n            }\n\n            static params(params) {\n                options.query = extend(options.query, params);\n                return this;\n            }\n\n            static param(key, value) {\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[key] = value;\n            }\n\n            static get(action) {\n                return Yawp.baseRequest('GET', Yawp.actionOptions(action));\n            }\n\n            static put(action) {\n                return Yawp.baseRequest('PUT', Yawp.actionOptions(action));\n            }\n\n            static _patch(action) {\n                return Yawp.baseRequest('PATCH', Yawp.actionOptions(action));\n            }\n\n            static post(action) {\n                return Yawp.baseRequest('POST', Yawp.actionOptions(action));\n            }\n\n            static _delete(action) {\n                return Yawp.baseRequest('DELETE', Yawp.actionOptions(action));\n            }\n\n            // instance method\n            save() {\n                return Yawp.create(this);\n            }\n        }\n\n        return Yawp;\n    }\n\n    yawp.config = (callback) => {\n        var c = {\n            baseUrl: (url) => {\n                baseUrl = url;\n            },\n            defaultFetchOptions: (options) => {\n                defaultFetchOptions = options;\n            }\n        };\n        callback(c);\n    };\n\n    return yawp;\n}"]}