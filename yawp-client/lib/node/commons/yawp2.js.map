{"version":3,"sources":["../../../src/commons/yawp2.js"],"names":[],"mappings":"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","file":"yawp2.js","sourcesContent":["import { extend } from './utils';\n\nvar baseUrl = '/api';\nvar defaultFetchOptions = {};\n\nfunction normalize(arg) {\n    if (!arg) {\n        return '';\n    }\n    if (arg instanceof Object) {\n        return extractId(arg);\n    }\n    return arg;\n}\n\nfunction hasId(object) {\n    return object.id;\n}\n\nfunction extractId(object) {\n    if (hasId(object)) {\n        return object.id;\n    }\n    throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n}\n\nexport default (request) => {\n\n    function yawpFn(baseArg) {\n\n        var options = {};\n        var q = {};\n\n        class Yawp {\n\n            constructor(props) {\n                extend(this, props);\n            }\n\n            // request\n\n            static clear() {\n                options = {\n                    url: normalize(baseArg)\n                };\n            }\n\n            static prepareRequestOptions() {\n                var _options = extend({}, options);\n                Yawp.clear();\n                return _options;\n            }\n\n            static baseRequest(type) {\n                var options = Yawp.prepareRequestOptions();\n\n                var url = baseUrl + options.url;\n                delete options.url;\n\n                options.method = type;\n                options.json = true;\n                extend(options, defaultFetchOptions);\n\n                //console.log('r', url, options);\n\n                return request(url, options);\n            }\n\n            // query\n\n            static from(parentBaseArg) {\n                var parentBase = normalize(parentBaseArg);\n                options.url = parentBase + options.url;\n                return this;\n            }\n\n            static transform(t) {\n                Yawp.param('t', t);\n                return this;\n            }\n\n            static where(data) {\n                if (arguments.length === 1) {\n                    q.where = data;\n                } else {\n                    q.where = [].slice.call(arguments);\n                }\n                return this;\n            }\n\n            static order(data) {\n                q.order = data;\n                return this;\n            }\n\n            static sort(data) {\n                q.sort = data;\n                return this;\n            }\n\n            static limit(data) {\n                q.limit = data;\n                return this;\n            }\n\n            static fetch(cb) {\n                var promise = Yawp.baseRequest('GET');\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n\n            static setupQuery() {\n                if (Object.keys(q).length > 0) {\n                    Yawp.param('q', JSON.stringify(q));\n                }\n            }\n            //\n            //static url(decode) {\n            //    Yawp.setupQuery();\n            //    var url = baseUrl + options.url + (options.query ? '?' + toUrlParam(options.query) : '');\n            //    return decode ? decodeURIComponent(url) : url;\n            //}\n\n            static list(cb) {\n                Yawp.setupQuery();\n                var promise = Yawp.baseRequest('GET');\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n\n            static first(cb) {\n                Yawp.limit(1);\n\n                return Yawp.list(function (objects) {\n                    var object = objects.length === 0 ? null : objects[0];\n                    return cb ? cb(object) : object;\n                });\n            }\n\n            static only(cb) {\n                return Yawp.list(function (objects) {\n                    if (objects.length !== 1) {\n                        throw 'called only but got ' + objects.length + ' results';\n                    }\n                    var object = objects[0];\n                    return cb ? cb(object) : object;\n                });\n            }\n\n            // repository\n\n            static create(object) {\n                options.body = JSON.stringify(object);\n                return Yawp.baseRequest('POST');\n            }\n\n            static update(object) {\n                options.body = JSON.stringify(object);\n                return Yawp.baseRequest('PUT');\n            }\n\n            static patch(object) {\n                options.body = JSON.stringify(object);\n                return Yawp.baseRequest('PATCH');\n            }\n\n            static destroy() {\n                return Yawp.baseRequest('DELETE');\n            }\n\n            // actions\n\n            static json(object) {\n                options.body = JSON.stringify(object);\n                return this;\n            }\n\n            static params(params) {\n                options.query = extend(options.query, params);\n                return this;\n            }\n\n            static param(key, value) {\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[key] = value;\n            }\n\n            static action(verb, path) {\n                options.url += '/' + path;\n                return Yawp.baseRequest(verb);\n            }\n\n            static get(action) {\n                return Yawp.action('GET', action);\n            }\n\n            static put(action) {\n                return Yawp.action('PUT', action);\n            }\n\n            static _patch(action) {\n                return Yawp.action('PATCH', action);\n            }\n\n            static post(action) {\n                return Yawp.action('POST', action);\n            }\n\n            static _delete(action) {\n                return Yawp.action('DELETE', action);\n            }\n\n            // instance method\n\n            save(cb) {\n                var promise = this.createOrUpdate();\n                return cb ? promise.then(cb) : promise;\n            }\n\n            createOrUpdate() {\n                var promise;\n                if (hasId(this)) {\n                    options.url = this.id;\n                    promise = Yawp.update(this);\n                } else {\n                    promise = Yawp.create(this);\n                }\n                return promise;\n            }\n        }\n\n        Yawp.clear();\n        return Yawp;\n    }\n\n    // base api\n\n    function config(cb) {\n        var c = {\n            baseUrl: (url) => {\n                baseUrl = url;\n            },\n            defaultFetchOptions: (options) => {\n                defaultFetchOptions = options;\n            }\n        };\n        cb(c);\n    };\n\n    function update(object) {\n        var id = extractId(object);\n        return yawpFn(id).update(object);\n    }\n\n    function patch(object) {\n        var id = extractId(object);\n        return yawpFn(id).patch(object);\n    }\n\n    function destroy(object) {\n        var id = extractId(object);\n        return yawpFn(id).destroy(object);\n    }\n\n    let baseApi = {\n        config,\n        update,\n        patch,\n        destroy\n    }\n\n    return extend(yawpFn, baseApi);\n}"]}