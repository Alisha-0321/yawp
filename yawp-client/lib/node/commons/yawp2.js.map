{"version":3,"sources":["../../../src/commons/yawp2.js"],"names":[],"mappings":"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","file":"yawp2.js","sourcesContent":["import { extend } from './utils';\n\nvar baseUrl = '/api';\nvar defaultFetchOptions = {};\n\nfunction normalize(arg) {\n    if (!arg) {\n        return '';\n    }\n    if (arg instanceof Object) {\n        return extractId(arg);\n    }\n    return arg;\n}\n\nfunction extractId(object) {\n    if (object.id) {\n        return object.id;\n    }\n    throw 'use yawp(id) if your endpoint does not have a @Id field called id';\n}\n\nexport default (request) => {\n\n    function yawpFn(baseArg) {\n\n        var options = {\n            url: normalize(baseArg)\n        };\n\n        var q = {};\n\n        class Yawp {\n\n            constructor(props) {\n                extend(this, props);\n            }\n\n            // prepare\n\n            static from(parentBaseArg) {\n                var parentBase = normalize(parentBaseArg);\n                options.url = parentBase + options.url;\n                return this;\n            }\n\n            static transform(t) {\n                Yawp.param('t', t);\n                return this;\n            }\n\n            // query\n\n            static where(data) {\n                if (arguments.length === 1) {\n                    q.where = data;\n                } else {\n                    q.where = [].slice.call(arguments);\n                }\n                return this;\n            }\n\n            static order(data) {\n                q.order = data;\n                return this;\n            }\n\n            static sort(data) {\n                q.sort = data;\n                return this;\n            }\n\n            static limit(data) {\n                q.limit = data;\n                return this;\n            }\n\n            static fetch(cb) {\n                var promise = baseRequest('GET', options);\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n\n            static setupQuery() {\n                if (Object.keys(q).length > 0) {\n                    Yawp.param('q', JSON.stringify(q));\n                }\n            }\n\n            static url(decode) {\n                Yawp.setupQuery();\n                var url = baseUrl + options.url + (options.query ? '?' + toUrlParam(options.query) : '');\n                if (decode) {\n                    return decodeURIComponent(url);\n                }\n                return url;\n            }\n\n            static list(cb) {\n                Yawp.setupQuery();\n                var promise = baseRequest('GET', options);\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n\n            static first(cb) {\n                Yawp.limit(1);\n\n                return Yawp.list(function (objects) {\n                    var object = objects.length === 0 ? null : objects[0];\n                    if (cb) {\n                        return cb(object);\n                    }\n                    return object;\n                });\n            }\n\n            static only(cb) {\n                return Yawp.list(function (objects) {\n                    if (objects.length !== 1) {\n                        throw 'called only but got ' + objects.length + ' results';\n                    }\n                    var object = objects[0];\n                    if (cb) {\n                        return cb(object);\n                    }\n                    return object;\n                });\n            }\n\n            // repository\n\n            static create(object) {\n                options.data = JSON.stringify(object);\n                return baseRequest('POST', options);\n            }\n\n            static update(object) {\n                // TODO: deal with id\n                console.log('update', object);\n                options.data = JSON.stringify(object);\n                return baseRequest('PUT', options);\n            }\n\n            static patch(object) {\n                // TODO: deal with id\n                options.data = JSON.stringify(object);\n                return baseRequest('PATCH', options);\n            }\n\n            static destroy() {\n                // TODO: deal with id\n                return baseRequest('DELETE', options);\n            }\n\n            // actions\n\n            static actionOptions(action) {\n                options.url += '/' + action;\n                return options;\n            }\n\n            static json(object) {\n                options.data = JSON.stringify(object);\n                return this;\n            }\n\n            static params(params) {\n                options.query = extend(options.query, params);\n                return this;\n            }\n\n            static param(key, value) {\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[key] = value;\n            }\n\n            static get(action) {\n                return baseRequest('GET', Yawp.actionOptions(action));\n            }\n\n            static put(action) {\n                return baseRequest('PUT', Yawp.actionOptions(action));\n            }\n\n            static _patch(action) {\n                return baseRequest('PATCH', Yawp.actionOptions(action));\n            }\n\n            static post(action) {\n                return baseRequest('POST', Yawp.actionOptions(action));\n            }\n\n            static _delete(action) {\n                return baseRequest('DELETE', Yawp.actionOptions(action));\n            }\n\n            // instance method\n\n            save(cb) {\n                var promise = Yawp.create(this);\n                if (cb) {\n                    return promise.then(cb);\n                }\n                return promise;\n            }\n        }\n\n        return Yawp;\n    }\n\n    // request\n\n    function baseRequest(type, _options) {\n        var options = extend({}, _options);\n\n        var url = baseUrl + options.url;\n        var body = options.data;\n        delete options.url;\n        delete options.data;\n\n        options.method = type;\n        options.body = body;\n        options.json = true;\n        extend(options, defaultFetchOptions);\n\n        //console.log('r', url, options);\n\n        return request(url, options);\n    }\n\n    // base api\n\n    function config(cb) {\n        var c = {\n            baseUrl: (url) => {\n                baseUrl = url;\n            },\n            defaultFetchOptions: (options) => {\n                defaultFetchOptions = options;\n            }\n        };\n        cb(c);\n    };\n\n    function update(object) {\n        var id = extractId(object);\n        return yawpFn(id).update(object);\n    }\n\n    function patch(object) {\n        var id = extractId(object);\n        return yawpFn(id).patch(object);\n    }\n\n    function destroy(object) {\n        var id = extractId(object);\n        return yawpFn(id).destroy(object);\n    }\n\n    let baseApi = {\n        config,\n        update,\n        patch,\n        destroy\n    }\n\n    return extend(yawpFn, baseApi);\n}"]}