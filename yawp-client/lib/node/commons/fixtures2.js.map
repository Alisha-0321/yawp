{"version":3,"sources":["../../../src/commons/fixtures2.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEA,IAAM,mBAAmB,WAAzB;AACA,IAAM,oBAAoB,gCAA1B;AACA,IAAM,0BAA0B,CAAC,IAAD,CAAhC,C;;kBAEe,UAAC,OAAD,EAAa;AAAA,QAElB,QAFkB;AAGpB,4BAAc;AAAA;;AACV,iBAAK,OAAL,GAAe,gBAAf;AACA,iBAAK,QAAL,GAAgB,iBAAhB;AACA,iBAAK,cAAL,GAAsB,uBAAtB;AACA,iBAAK,OAAL,GAAe,IAAf;AACH;;AARmB;AAAA;AAAA,mCAUb,QAVa,EAUH;AACb,yBAAS,IAAT;AACH;AAZmB;AAAA;AAAA,oCAcZ;AACJ,uBAAO,QAAQ,KAAK,QAAb,EAAuB;AAC1B,4BAAQ;AADkB,iBAAvB,EAEJ,IAFI,CAEC,YAAM;;AAEb,iBAJM,CAAP;AAKH;AApBmB;AAAA;AAAA,iCAsBf,IAtBe,EAsBT,IAtBS,EAsBH;AACb,qBAAK,IAAL,IAAa,IAAI,eAAJ,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,GAAnD;AACH;AAxBmB;AAAA;AAAA,kCA0Bd,SA1Bc,EA0BH;AACb,oBAAI,CAAC,KAAK,OAAV,EAAmB;AACf,yBAAK,OAAL,GAAe,WAAf;AACA,2BAAO,KAAK,OAAZ;AACH;AACD,uBAAO,KAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB,CAAP;AACH;AAhCmB;AAAA;AAAA;;AAAA,QAoClB,eApCkB;AAqCpB,iCAAY,EAAZ,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B;AAAA;;AACxB,iBAAK,EAAL,GAAU,EAAV;AACA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,IAAL,GAAY,IAAZ;AACA,iBAAK,GAAL,GAAW,KAAK,SAAL,EAAX;AACH;;AA1CmB;AAAA;AAAA,wCA4CR;AAAA;;AACR,uBAAO,UAAC,GAAD,EAAM,IAAN,EAAe;AAClB,2BAAO,MAAK,EAAL,CAAQ,KAAR,CAAc,MAAK,IAAL,CAAU,GAAV,EAAe,IAAf,CAAd,CAAP;AACH,iBAFD;AAGH;AAhDmB;AAAA;AAAA,kCAkDd;AACF,uBAAO,KAAK,EAAL,CAAQ,OAAR,GAAkB,KAAK,IAA9B;AACH;AApDmB;AAAA;AAAA,iCAsDf,GAtDe,EAsDV,IAtDU,EAsDJ;AACZ,qBAAK,wBAAL,CAA8B,GAA9B;AACA,uBAAO,KAAK,mBAAL,CAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACH;AAzDmB;AAAA;AAAA,gDA2DA,GA3DA,EA2DK,IA3DL,EA2DW;AAAA;;AAC3B,uBAAO;AAAA,2BAAM,QAAQ,OAAK,GAAL,EAAR,EAAoB;AAC7B,gCAAQ,MADqB;AAE7B,8BAAM,IAFuB;AAG7B,8BAAM,KAAK,SAAL,CAAe,IAAf;AAHuB,qBAApB,EAIV,IAJU,CAIL,UAAC,MAAD,EAAY;AAChB,+BAAK,GAAL,CAAS,GAAT,IAAgB,MAAhB;AACA,+BAAO,MAAP;AACH,qBAPY,CAAN;AAAA,iBAAP;AAQH;AApEmB;AAAA;AAAA,qDAsEK,GAtEL,EAsEU;AAC1B,qBAAK,GAAL,CAAS,GAAT,IAAgB,KAAK,EAAL,CAAQ,cAAR,CAAuB,MAAvB,CAA8B,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC/D,wBAAI,IAAJ,IAAY,EAAZ;AACA,2BAAO,GAAP;AACH,iBAHe,EAGb,EAHa,CAAhB;AAIH;AA3EmB;AAAA;AAAA;;AA8ExB,WAAO,IAAI,QAAJ,EAAP;AACH,C","file":"fixtures2.js","sourcesContent":["import { extend } from './utils';\n\nconst DEFAULT_BASE_URL = '/fixtures';\nconst DEFAULT_RESET_URL = '/_ah/yawp/datastore/delete_all';\nconst DEFAULT_LAZY_PROPERTIES = ['id']; // needed till harmony proxies\n\nexport default (request) => {\n\n    class Fixtures {\n        constructor() {\n            this.baseUrl = DEFAULT_BASE_URL;\n            this.resetUrl = DEFAULT_RESET_URL;\n            this.lazyProperties = DEFAULT_LAZY_PROPERTIES;\n            this.promise = null;\n        }\n\n        config(callback) {\n            callback(this);\n        }\n\n        reset() {\n            return request(this.resetUrl, {\n                method: 'GET'\n            }).then(() => {\n                // do not pass the result to the upstream\n            });\n        }\n\n        bind(name, path) {\n            this[name] = new EndpointFixture(this, name, path).api;\n        }\n\n        chain(promiseFn) {\n            if (!this.promise) {\n                this.promise = promiseFn();\n                return this.promise;\n            }\n            return this.promise.then(promiseFn);\n        }\n\n    }\n\n    class EndpointFixture {\n        constructor(fx, name, path) {\n            this.fx = fx;\n            this.name = name;\n            this.path = path;\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            return (key, data) => {\n                return this.fx.chain(this.load(key, data));\n            };\n        }\n\n        url() {\n            return this.fx.baseUrl + this.path;\n        }\n\n        load(key, data) {\n            this.createLazyPropertyLoader(key);\n            return this.createLoadPromiseFn(key, data);\n        }\n\n        createLoadPromiseFn(key, data) {\n            return () => request(this.url(), {\n                method: 'POST',\n                json: true,\n                body: JSON.stringify(data)\n            }).then((object) => {\n                this.api[key] = object;\n                return object;\n            });\n        }\n\n        createLazyPropertyLoader(key) {\n            this.api[key] = this.fx.lazyProperties.reduce(function (map, name) {\n                map[name] = {};\n                return map;\n            }, {});\n        }\n    }\n\n    return new Fixtures();\n}\n"]}