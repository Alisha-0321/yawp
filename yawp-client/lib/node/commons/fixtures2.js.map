{"version":3,"sources":["../../../src/commons/fixtures2.js"],"names":[],"mappings":"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","file":"fixtures2.js","sourcesContent":["import { extend } from './utils';\n\nconst DEFAULT_BASE_URL = '/fixtures';\nconst DEFAULT_RESET_URL = '/_ah/yawp/datastore/delete_all';\nconst DEFAULT_LAZY_PROPERTIES = ['id']; // needed till harmony proxies\n\nexport default (request) => {\n\n    class Fixtures {\n        constructor() {\n            this.baseUrl = DEFAULT_BASE_URL;\n            this.resetUrl = DEFAULT_RESET_URL;\n            this.lazyProperties = DEFAULT_LAZY_PROPERTIES;\n            this.promise = null;\n            this.fixtures = [];\n            this.lazy = {};\n        }\n\n        config(callback) {\n            callback(this);\n        }\n\n        reset() {\n            return request(this.resetUrl, {\n                method: 'GET'\n            }).then(() => {\n                this.clear();\n            });\n        }\n\n        clear(all) {\n            this.promise = null;\n            for (let {name, path} of this.fixtures) {\n                this.bindFixture(name, path);\n                all && this.bindLazy(name, path);\n            }\n        }\n\n        bind(name, path) {\n            this.fixtures.push({name, path});\n            this.bindFixture(name, path);\n            this.bindLazy(name, path);\n        }\n\n        bindFixture(name, path) {\n            this[name] = new Fixture(this, name, path).api;\n        }\n\n        bindLazy(name, path) {\n            this.lazy[name] = new Lazy(this, name, path).api;\n        }\n\n        chain(promiseFn) {\n            if (!this.promise) {\n                this.promise = promiseFn();\n            } else {\n                this.promise = this.promise.then(promiseFn)\n            }\n            return this.promise;\n        }\n\n        load(callback) {\n            if (!this.promise) {\n                callback();\n                return;\n            }\n            this.promise.then(() => {\n                callback();\n            });\n        }\n\n        lazyLoadFn(name, key) {\n            return () => {\n\n            }\n        }\n\n        getLazyDataFor(name, key) {\n            var lazy = this.lazy[name].self;\n            return lazy.getData(key);\n        }\n\n    }\n\n    class Fixture {\n        constructor(fx, name, path) {\n            this.fx = fx;\n            this.name = name;\n            this.path = path;\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            return (key, data) => {\n                return this.fx.chain(this.load(key, data));\n            };\n        }\n\n        url() {\n            return this.fx.baseUrl + this.path;\n        }\n\n        load(key, data) {\n            this.createStubs(key);\n            return this.createLoadPromiseFn(key, data);\n        }\n\n        createLoadPromiseFn(key, data) {\n            if (!data) {\n                data = this.fx.getLazyDataFor(this.name, key);\n            }\n\n            return () => {\n                if (this.isLoaded(key)) {\n                    return this.api[key];\n                }\n\n                return this.prepare(data).then((object) =>\n                    request(this.url(), {\n                        method: 'POST',\n                        json: true,\n                        body: JSON.stringify(object)\n                    }).then((response) => {\n                        this.api[key] = response;\n                        return response;\n                    }));\n            }\n        }\n\n        prepare(data) {\n            return new Promise((resolve) => {\n                let object = {};\n                extend(object, data);\n\n                for (let key of Object.keys(object)) {\n                    let value = object[key];\n                    if (value instanceof Function) {\n                        value().then((actualValue) => {\n                            object[key] = actualValue;\n                        });\n                    }\n                    // deep into the object\n                }\n                return resolve(object);\n            });\n        }\n\n        createStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            let self = this;\n            this.api[key] = this.fx.lazyProperties.reduce((map, name) => {\n                map[name] = () => {\n                    return new Promise((resolve) => resolve(self.api[key][name]));\n                }\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        isLoaded(key) {\n            return this.api[key] && !this.hasStubs(key);\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n    }\n\n    class Lazy {\n        constructor(fx, name, path) {\n            this.fx = fx;\n            this.name = name;\n            this.path = path;\n            this.data = {};\n            this.api = this.createApi();\n        }\n\n        createApi() {\n            let api = (key, data) => {\n                this.createLazyStubs(key);\n                this.data[key] = data;\n            };\n            api.self = this;\n            return api;\n        }\n\n        getData(key) {\n            return this.data[key];\n        }\n\n        createLazyStubs(key) {\n            if (this.hasStubs(key)) {\n                return;\n            }\n            this.api[key] = this.fx.lazyProperties.reduce((map, name) => {\n                map[name] = this.fx.lazyLoadFn(name, key);\n                return map;\n            }, {});\n            this.api[key].__stub__ = true;\n        }\n\n        hasStubs(key) {\n            return this.api[key] && this.api[key].__stub__;\n        }\n    }\n\n    return new Fixtures();\n}\n"]}